

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 03 10:01:42 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383                           
   384                           	psect	idataBANK0
   385  0516                     __pidataBANK0:
   386                           
   387                           ;initializer for _Mensaje1
   388  0516  3420               	retlw	32
   389  0517  3453               	retlw	83
   390  0518  3430               	retlw	48
   391  0519  343A               	retlw	58
   392  051A  3420               	retlw	32
   393  051B  3420               	retlw	32
   394  051C  3420               	retlw	32
   395  051D  3453               	retlw	83
   396  051E  3431               	retlw	49
   397  051F  343A               	retlw	58
   398  0520  3420               	retlw	32
   399  0521  3420               	retlw	32
   400  0522  3420               	retlw	32
   401  0523  3453               	retlw	83
   402  0524  3432               	retlw	50
   403  0525  343A               	retlw	58
   404  0526  3420               	retlw	32
   405  0527  3400               	retlw	0
   406  0018                     _RCSTAbits	set	24
   407  0009                     _PORTEbits	set	9
   408  0006                     _PORTBbits	set	6
   409  000B                     _INTCONbits	set	11
   410  0009                     _PORTE	set	9
   411  0008                     _PORTD	set	8
   412  0006                     _PORTB	set	6
   413  0005                     _PORTA	set	5
   414  001A                     _RCREG	set	26
   415  001E                     _ADRESH	set	30
   416  001F                     _ADCON0bits	set	31
   417  000C                     _PIR1bits	set	12
   418  009A                     _SPBRGH	set	154
   419  0099                     _SPBRG	set	153
   420  0098                     _TXSTAbits	set	152
   421  009F                     _ADCON1bits	set	159
   422  008C                     _PIE1bits	set	140
   423  008F                     _OSCCONbits	set	143
   424  0089                     _TRISE	set	137
   425  0088                     _TRISD	set	136
   426  0086                     _TRISB	set	134
   427  0085                     _TRISA	set	133
   428  0187                     _BAUDCTLbits	set	391
   429  0189                     _ANSELH	set	393
   430  0188                     _ANSEL	set	392
   431                           
   432                           	psect	cinit
   433  000F                     start_initialization:	
   434                           ; #config settings
   435                           
   436  000F                     __initialization:
   437                           
   438                           ; Initialize objects allocated to BANK0
   439  000F  1383               	bcf	3,7	;select IRP bank0
   440  0010  3062               	movlw	low (__pdataBANK0+18)
   441  0011  00FD               	movwf	btemp+-1
   442  0012  3005               	movlw	high __pidataBANK0
   443  0013  00FE               	movwf	btemp
   444  0014  3016               	movlw	low __pidataBANK0
   445  0015  00FF               	movwf	btemp+1
   446  0016  3050               	movlw	low __pdataBANK0
   447  0017  0084               	movwf	4
   448  0018  120A  118A  2507  120A  118A  	fcall	init_ram0
   449                           
   450                           ; Clear objects allocated to BANK0
   451  001D  3020               	movlw	low __pbssBANK0
   452  001E  0084               	movwf	4
   453  001F  3039               	movlw	low (__pbssBANK0+25)
   454  0020  120A  118A  254C  120A  118A  	fcall	clear_ram0
   455                           
   456                           ; Clear objects allocated to COMMON
   457  0025  01F8               	clrf	__pbssCOMMON& (0+127)
   458  0026  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   459  0027  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   460  0028                     end_of_initialization:	
   461                           ;End of C runtime variable initialization code
   462                           
   463  0028                     __end_of__initialization:
   464  0028  0183               	clrf	3
   465  0029  120A  118A  2CCD   	ljmp	_main	;jump to C main() function
   466                           
   467                           	psect	bssCOMMON
   468  0078                     __pbssCOMMON:
   469  0078                     _decenas0:
   470  0078                     	ds	1
   471  0079                     _centenas0:
   472  0079                     	ds	1
   473  007A                     _portEs:
   474  007A                     	ds	1
   475                           
   476                           	psect	bssBANK0
   477  0020                     __pbssBANK0:
   478  0020                     _S2D:
   479  0020                     	ds	2
   480  0022                     _unidades2:
   481  0022                     	ds	1
   482  0023                     _decenas2:
   483  0023                     	ds	1
   484  0024                     _centenas2:
   485  0024                     	ds	1
   486  0025                     _unidades1:
   487  0025                     	ds	1
   488  0026                     _decenas1:
   489  0026                     	ds	1
   490  0027                     _centenas1:
   491  0027                     	ds	1
   492  0028                     _unidades0:
   493  0028                     	ds	1
   494  0029                     _S2:
   495  0029                     	ds	1
   496  002A                     _S1:
   497  002A                     	ds	1
   498  002B                     _S0:
   499  002B                     	ds	1
   500  002C                     _S1D:
   501  002C                     	ds	2
   502  002E                     _S0D:
   503  002E                     	ds	2
   504  0030                     _S2DU:
   505  0030                     	ds	1
   506  0031                     _S2DD:
   507  0031                     	ds	1
   508  0032                     _S2DC:
   509  0032                     	ds	1
   510  0033                     _S1DU:
   511  0033                     	ds	1
   512  0034                     _S1DD:
   513  0034                     	ds	1
   514  0035                     _S1DC:
   515  0035                     	ds	1
   516  0036                     _S0DU:
   517  0036                     	ds	1
   518  0037                     _S0DD:
   519  0037                     	ds	1
   520  0038                     _S0DC:
   521  0038                     	ds	1
   522                           
   523                           	psect	dataBANK0
   524  0050                     __pdataBANK0:
   525  0050                     _Mensaje1:
   526  0050                     	ds	18
   527                           
   528                           	psect	inittext
   529  0503                     init_fetch0:	
   530                           ;	Called with low address in FSR and high address in W
   531                           
   532  0503  087E               	movf	btemp,w
   533  0504  008A               	movwf	10
   534  0505  087F               	movf	btemp+1,w
   535  0506  0082               	movwf	2
   536  0507                     init_ram0:	
   537                           ;Called with:
   538                           ;	high address of idata address in btemp 
   539                           ;	low address of idata address in btemp+1 
   540                           ;	low address of data in FSR
   541                           ;	high address + 1 of data in btemp-1
   542                           
   543  0507  120A  118A  2503  120A  118A  	fcall	init_fetch0
   544  050C  0080               	movwf	0
   545  050D  0A84               	incf	4,f
   546  050E  0804               	movf	4,w
   547  050F  067D               	xorwf	btemp+-1,w
   548  0510  1903               	btfsc	3,2
   549  0511  3400               	retlw	0
   550  0512  0AFF               	incf	btemp+1,f
   551  0513  1903               	btfsc	3,2
   552  0514  0AFE               	incf	btemp,f
   553  0515  2D07               	goto	init_ram0
   554                           
   555                           	psect	clrtext
   556  054C                     clear_ram0:	
   557                           ;	Called with FSR containing the base address, and
   558                           ;	W with the last address+1
   559                           
   560  054C  0064               	clrwdt	;clear the watchdog before getting into this loop
   561  054D                     clrloop0:
   562  054D  0180               	clrf	0	;clear RAM location pointed to by FSR
   563  054E  0A84               	incf	4,f	;increment pointer
   564  054F  0604               	xorwf	4,w	;XOR with final address
   565  0550  1903               	btfsc	3,2	;have we reached the end yet?
   566  0551  3400               	retlw	0	;all done for this memory range, return
   567  0552  0604               	xorwf	4,w	;XOR again to restore value
   568  0553  2D4D               	goto	clrloop0	;do the next byte
   569                           
   570                           	psect	cstackCOMMON
   571  0070                     __pcstackCOMMON:
   572  0070                     ?_setup:
   573  0070                     ?_LCD_Inicar:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_MensajeLCD:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_CambioCanalADC:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_ValoresDisplay:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_LCD_Imprimir_Texto:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_LCD_Imprimir_Char:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_NumAAscii:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_LCD_Instruccion:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_LCD_Clock_I:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_isr:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ??_isr:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_main:	
   607                           ; 1 bytes @ 0x0
   608                           
   609                           
   610                           ; 1 bytes @ 0x0
   611  0070                     	ds	3
   612  0073                     ??_CambioCanalADC:
   613  0073                     ??_NumAAscii:	
   614                           ; 1 bytes @ 0x3
   615                           
   616  0073                     ??_EUSART_C:	
   617                           ; 1 bytes @ 0x3
   618                           
   619  0073                     ??_LCD_Clock_I:	
   620                           ; 1 bytes @ 0x3
   621                           
   622  0073                     ?_strlen:	
   623                           ; 1 bytes @ 0x3
   624                           
   625  0073                     ?___wmul:	
   626                           ; 2 bytes @ 0x3
   627                           
   628  0073                     ?___awmod:	
   629                           ; 2 bytes @ 0x3
   630                           
   631  0073                     EUSART_C@sinc:	
   632                           ; 2 bytes @ 0x3
   633                           
   634  0073                     ___wmul@multiplier:	
   635                           ; 1 bytes @ 0x3
   636                           
   637  0073                     ___awmod@divisor:	
   638                           ; 2 bytes @ 0x3
   639                           
   640                           
   641                           ; 2 bytes @ 0x3
   642  0073                     	ds	1
   643  0074                     ??_setup:
   644  0074                     ??_LCD_Imprimir_Char:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ??_LCD_Instruccion:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     LCD_Instruccion@Comando:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     LCD_Imprimir_Char@Comando:	
   654                           ; 1 bytes @ 0x4
   655                           
   656                           
   657                           ; 1 bytes @ 0x4
   658  0074                     	ds	1
   659  0075                     ??_LCD_Inicar:
   660  0075                     ?_LCD_Set_Cursor:	
   661                           ; 1 bytes @ 0x5
   662                           
   663  0075                     ??_strlen:	
   664                           ; 1 bytes @ 0x5
   665                           
   666  0075                     NumAAscii@valor:	
   667                           ; 1 bytes @ 0x5
   668                           
   669  0075                     LCD_Set_Cursor@b:	
   670                           ; 1 bytes @ 0x5
   671                           
   672  0075                     ___wmul@multiplicand:	
   673                           ; 1 bytes @ 0x5
   674                           
   675  0075                     ___awmod@dividend:	
   676                           ; 2 bytes @ 0x5
   677                           
   678                           
   679                           ; 2 bytes @ 0x5
   680  0075                     	ds	1
   681  0076                     ??_LCD_Set_Cursor:
   682  0076                     strlen@s:	
   683                           ; 1 bytes @ 0x6
   684                           
   685                           
   686                           ; 1 bytes @ 0x6
   687  0076                     	ds	1
   688  0077                     ??___wmul:
   689  0077                     ??___awdiv:	
   690                           ; 1 bytes @ 0x7
   691                           
   692  0077                     ??___awmod:	
   693                           ; 1 bytes @ 0x7
   694                           
   695  0077                     strlen@cp:	
   696                           ; 1 bytes @ 0x7
   697                           
   698                           
   699                           ; 1 bytes @ 0x7
   700  0077                     	ds	1
   701  0078                     ??_MensajeLCD:
   702  0078                     ??_main:	
   703                           ; 1 bytes @ 0x8
   704                           
   705                           
   706                           	psect	cstackBANK0
   707  0039                     __pcstackBANK0:	
   708                           ; 1 bytes @ 0x8
   709                           
   710  0039                     ??_LCD_Imprimir_Texto:
   711  0039                     ?_EUSART_C:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0039                     LCD_Set_Cursor@a:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0039                     EUSART_C@brgh:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0039                     ___awmod@counter:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0039                     ___wmul@product:	
   724                           ; 1 bytes @ 0x0
   725                           
   726                           
   727                           ; 2 bytes @ 0x0
   728  0039                     	ds	1
   729  003A                     EUSART_C@brg16:
   730  003A                     ___awmod@sign:	
   731                           ; 1 bytes @ 0x1
   732                           
   733                           
   734                           ; 1 bytes @ 0x1
   735  003A                     	ds	1
   736  003B                     ?___awdiv:
   737  003B                     LCD_Imprimir_Texto@a:	
   738                           ; 2 bytes @ 0x2
   739                           
   740  003B                     EUSART_C@spbrg:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  003B                     ___awdiv@divisor:	
   744                           ; 1 bytes @ 0x2
   745                           
   746                           
   747                           ; 2 bytes @ 0x2
   748  003B                     	ds	1
   749  003C                     LCD_Imprimir_Texto@i:
   750  003C                     EUSART_C@spbrgh:	
   751                           ; 1 bytes @ 0x3
   752                           
   753                           
   754                           ; 1 bytes @ 0x3
   755  003C                     	ds	1
   756  003D                     EUSART_C@spen:
   757  003D                     ___awdiv@dividend:	
   758                           ; 1 bytes @ 0x4
   759                           
   760                           
   761                           ; 2 bytes @ 0x4
   762  003D                     	ds	1
   763  003E                     EUSART_C@rx9:
   764                           
   765                           ; 1 bytes @ 0x5
   766  003E                     	ds	1
   767  003F                     EUSART_C@cren:
   768  003F                     ___awdiv@counter:	
   769                           ; 1 bytes @ 0x6
   770                           
   771                           
   772                           ; 1 bytes @ 0x6
   773  003F                     	ds	1
   774  0040                     EUSART_C@txen:
   775  0040                     ___awdiv@sign:	
   776                           ; 1 bytes @ 0x7
   777                           
   778                           
   779                           ; 1 bytes @ 0x7
   780  0040                     	ds	1
   781  0041                     EUSART_C@tx9:
   782  0041                     ___awdiv@quotient:	
   783                           ; 1 bytes @ 0x8
   784                           
   785                           
   786                           ; 2 bytes @ 0x8
   787  0041                     	ds	2
   788  0043                     ?_Map255a500:
   789  0043                     ?_divisor:	
   790                           ; 1 bytes @ 0xA
   791                           
   792  0043                     Map255a500@b:	
   793                           ; 1 bytes @ 0xA
   794                           
   795  0043                     divisor@valor:	
   796                           ; 1 bytes @ 0xA
   797                           
   798                           
   799                           ; 2 bytes @ 0xA
   800  0043                     	ds	1
   801  0044                     ??_Map255a500:
   802                           
   803                           ; 1 bytes @ 0xB
   804  0044                     	ds	1
   805  0045                     divisor@unidades:
   806                           
   807                           ; 1 bytes @ 0xC
   808  0045                     	ds	1
   809  0046                     Map255a500@a:
   810  0046                     divisor@decena:	
   811                           ; 1 bytes @ 0xD
   812                           
   813                           
   814                           ; 1 bytes @ 0xD
   815  0046                     	ds	1
   816  0047                     divisor@centena:
   817                           
   818                           ; 1 bytes @ 0xE
   819  0047                     	ds	1
   820  0048                     ??_divisor:
   821                           
   822                           ; 1 bytes @ 0xF
   823  0048                     	ds	1
   824  0049                     divisor@cociente0:
   825                           
   826                           ; 2 bytes @ 0x10
   827  0049                     	ds	2
   828  004B                     ??_ValoresDisplay:
   829                           
   830                           ; 1 bytes @ 0x12
   831  004B                     	ds	5
   832                           
   833                           	psect	maintext
   834  04CD                     __pmaintext:	
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 109 in file "LCDMain.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : B00/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0
   857 ;;      Totals:         0       0       0       0       0
   858 ;;Total ram usage:        0 bytes
   859 ;; Hardware stack levels required when called: 5
   860 ;; This function calls:
   861 ;;		_CambioCanalADC
   862 ;;		_LCD_Inicar
   863 ;;		_MensajeLCD
   864 ;;		_ValoresDisplay
   865 ;;		_setup
   866 ;; This function is called by:
   867 ;;		Startup code after reset
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _main
   873  04CD                     _main:
   874  04CD                     l1924:	
   875                           ;incstack = 0
   876                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   877                           
   878                           
   879                           ;LCDMain.c: 111:     setup();
   880  04CD  120A  118A  2239  120A  118A  	fcall	_setup
   881                           
   882                           ;LCDMain.c: 113:     LCD_Inicar();
   883  04D2  120A  118A  22EB  120A  118A  	fcall	_LCD_Inicar
   884  04D7                     l1926:
   885                           
   886                           ;LCDMain.c: 115:     {;LCDMain.c: 116:         MensajeLCD();
   887  04D7  120A  118A  20F2  120A  118A  	fcall	_MensajeLCD
   888  04DC                     l1928:
   889                           
   890                           ;LCDMain.c: 117:         CambioCanalADC();
   891  04DC  120A  118A  24AC  120A  118A  	fcall	_CambioCanalADC
   892                           
   893                           ;LCDMain.c: 118:         ValoresDisplay();
   894  04E1  120A  118A  202C  120A  118A  	fcall	_ValoresDisplay
   895  04E6  2CD7               	goto	l1926
   896  04E7  120A  118A  280C   	ljmp	start
   897  04EA                     __end_of_main:
   898                           
   899                           	psect	text1
   900  0239                     __ptext1:	
   901 ;; *************** function _setup *****************
   902 ;; Defined at:
   903 ;;		line 235 in file "LCDMain.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0, pclath, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0
   919 ;;      Temps:          1       0       0       0       0
   920 ;;      Totals:         1       0       0       0       0
   921 ;;Total ram usage:        1 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 2
   924 ;; This function calls:
   925 ;;		_EUSART_C
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _setup
   933  0239                     _setup:
   934  0239                     l1510:	
   935                           ;incstack = 0
   936                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   937                           
   938                           
   939                           ;LCDMain.c: 238:     ANSEL = 0;
   940  0239  1683               	bsf	3,5	;RP0=1, select bank3
   941  023A  1703               	bsf	3,6	;RP1=1, select bank3
   942  023B  0188               	clrf	8	;volatile
   943  023C                     l1512:
   944                           
   945                           ;LCDMain.c: 239:     ANSELH = 0b00101000;
   946  023C  3028               	movlw	40
   947  023D  0089               	movwf	9	;volatile
   948  023E                     l1514:
   949                           
   950                           ;LCDMain.c: 242:     TRISA = 0;
   951  023E  1683               	bsf	3,5	;RP0=1, select bank1
   952  023F  1303               	bcf	3,6	;RP1=0, select bank1
   953  0240  0185               	clrf	5	;volatile
   954                           
   955                           ;LCDMain.c: 243:     TRISB = 0b00110000;
   956  0241  3030               	movlw	48
   957  0242  0086               	movwf	6	;volatile
   958  0243                     l1516:
   959                           
   960                           ;LCDMain.c: 246:     TRISD = 0;
   961  0243  0188               	clrf	8	;volatile
   962  0244                     l1518:
   963                           
   964                           ;LCDMain.c: 247:     TRISE = 0;
   965  0244  0189               	clrf	9	;volatile
   966  0245                     l1520:
   967                           
   968                           ;LCDMain.c: 249:     PORTA = 0;
   969  0245  1283               	bcf	3,5	;RP0=0, select bank0
   970  0246  1303               	bcf	3,6	;RP1=0, select bank0
   971  0247  0185               	clrf	5	;volatile
   972  0248                     l1522:
   973                           
   974                           ;LCDMain.c: 250:     PORTB = 0;
   975  0248  0186               	clrf	6	;volatile
   976  0249                     l1524:
   977                           
   978                           ;LCDMain.c: 252:     PORTD = 0;
   979  0249  0188               	clrf	8	;volatile
   980  024A                     l1526:
   981                           
   982                           ;LCDMain.c: 253:     PORTE = 0;
   983  024A  0189               	clrf	9	;volatile
   984  024B                     l1528:
   985                           
   986                           ;LCDMain.c: 256:     OSCCONbits.IRCF = 0b100;
   987  024B  1683               	bsf	3,5	;RP0=1, select bank1
   988  024C  1303               	bcf	3,6	;RP1=0, select bank1
   989  024D  080F               	movf	15,w	;volatile
   990  024E  398F               	andlw	-113
   991  024F  3840               	iorlw	64
   992  0250  008F               	movwf	15	;volatile
   993  0251                     l1530:
   994                           
   995                           ;LCDMain.c: 257:     OSCCONbits.SCS = 1;
   996  0251  140F               	bsf	15,0	;volatile
   997  0252                     l1532:
   998                           
   999                           ;LCDMain.c: 259:     EUSART_C(0,1,1,25,0,1,0,1,1,0);
  1000  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0254  01B9               	clrf	EUSART_C@brgh
  1003  0255  0AB9               	incf	EUSART_C@brgh,f
  1004  0256  01BA               	clrf	EUSART_C@brg16
  1005  0257  0ABA               	incf	EUSART_C@brg16,f
  1006  0258  3019               	movlw	25
  1007  0259  00F4               	movwf	??_setup
  1008  025A  0874               	movf	??_setup,w
  1009  025B  00BB               	movwf	EUSART_C@spbrg
  1010  025C  01BC               	clrf	EUSART_C@spbrgh
  1011  025D  01BD               	clrf	EUSART_C@spen
  1012  025E  0ABD               	incf	EUSART_C@spen,f
  1013  025F  01BE               	clrf	EUSART_C@rx9
  1014  0260  01BF               	clrf	EUSART_C@cren
  1015  0261  0ABF               	incf	EUSART_C@cren,f
  1016  0262  01C0               	clrf	EUSART_C@txen
  1017  0263  0AC0               	incf	EUSART_C@txen,f
  1018  0264  01C1               	clrf	EUSART_C@tx9
  1019  0265  3000               	movlw	0
  1020  0266  120A  118A  2336  120A  118A  	fcall	_EUSART_C
  1021  026B                     l1534:
  1022                           
  1023                           ;LCDMain.c: 281:     INTCONbits.GIE = 1;
  1024  026B  178B               	bsf	11,7	;volatile
  1025  026C                     l1536:
  1026                           
  1027                           ;LCDMain.c: 282:     INTCONbits.PEIE = 1;
  1028  026C  170B               	bsf	11,6	;volatile
  1029  026D                     l1538:
  1030                           
  1031                           ;LCDMain.c: 283:     INTCONbits.RBIE = 0;
  1032  026D  118B               	bcf	11,3	;volatile
  1033  026E                     l1540:
  1034                           
  1035                           ;LCDMain.c: 284:     INTCONbits.RBIF = 0;
  1036  026E  100B               	bcf	11,0	;volatile
  1037  026F                     l1542:
  1038                           
  1039                           ;LCDMain.c: 285:     PIE1bits.TMR1IE = 0;
  1040  026F  1683               	bsf	3,5	;RP0=1, select bank1
  1041  0270  1303               	bcf	3,6	;RP1=0, select bank1
  1042  0271  100C               	bcf	12,0	;volatile
  1043  0272                     l1544:
  1044                           
  1045                           ;LCDMain.c: 286:     PIR1bits.TMR1IF = 0;
  1046  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0274  100C               	bcf	12,0	;volatile
  1049  0275                     l1546:
  1050                           
  1051                           ;LCDMain.c: 287:     PIE1bits.ADIE = 1;
  1052  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1053  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1054  0277  170C               	bsf	12,6	;volatile
  1055  0278                     l1548:
  1056                           
  1057                           ;LCDMain.c: 288:     PIR1bits.ADIF = 0;
  1058  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1060  027A  130C               	bcf	12,6	;volatile
  1061  027B                     l1550:
  1062                           
  1063                           ;LCDMain.c: 289:     PIR1bits.RCIF = 0;
  1064  027B  128C               	bcf	12,5	;volatile
  1065  027C                     l1552:
  1066                           
  1067                           ;LCDMain.c: 290:     PIE1bits.RCIE = 1;
  1068  027C  1683               	bsf	3,5	;RP0=1, select bank1
  1069  027D  1303               	bcf	3,6	;RP1=0, select bank1
  1070  027E  168C               	bsf	12,5	;volatile
  1071  027F                     l1554:
  1072                           
  1073                           ;LCDMain.c: 293:     ADCON1bits.ADFM = 0;
  1074  027F  139F               	bcf	31,7	;volatile
  1075  0280                     l1556:
  1076                           
  1077                           ;LCDMain.c: 294:     ADCON1bits.VCFG1 = 0;
  1078  0280  129F               	bcf	31,5	;volatile
  1079  0281                     l1558:
  1080                           
  1081                           ;LCDMain.c: 295:     ADCON1bits.VCFG0 = 0;
  1082  0281  121F               	bcf	31,4	;volatile
  1083  0282                     l1560:
  1084                           
  1085                           ;LCDMain.c: 297:     ADCON0bits.ADCS = 0b01;
  1086  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0284  081F               	movf	31,w	;volatile
  1089  0285  393F               	andlw	-193
  1090  0286  3840               	iorlw	64
  1091  0287  009F               	movwf	31	;volatile
  1092  0288                     l1562:
  1093                           
  1094                           ;LCDMain.c: 298:     ADCON0bits.CHS = 11;
  1095  0288  081F               	movf	31,w	;volatile
  1096  0289  39C3               	andlw	-61
  1097  028A  382C               	iorlw	44
  1098  028B  009F               	movwf	31	;volatile
  1099  028C                     l1564:
  1100                           
  1101                           ;LCDMain.c: 299:     ADCON0bits.ADON = 1;
  1102  028C  141F               	bsf	31,0	;volatile
  1103  028D                     l1566:
  1104                           
  1105                           ;LCDMain.c: 300:     _delay((unsigned long)((50)*(1000000/4000000.0)));
  1106  028D  3003               	movlw	3
  1107  028E  00F4               	movwf	??_setup
  1108  028F                     u877:
  1109  028F  0BF4               	decfsz	??_setup,f
  1110  0290  2A8F               	goto	u877
  1111  0291  2A92               	nop2
  1112  0292                     l169:
  1113  0292  0008               	return
  1114  0293                     __end_of_setup:
  1115                           
  1116                           	psect	text2
  1117  0336                     __ptext2:	
  1118 ;; *************** function _EUSART_C *****************
  1119 ;; Defined at:
  1120 ;;		line 3 in file "EUSART.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  sinc            1    wreg     unsigned char 
  1123 ;;  brgh            1    0[BANK0 ] unsigned char 
  1124 ;;  brg16           1    1[BANK0 ] unsigned char 
  1125 ;;  spbrg           1    2[BANK0 ] unsigned char 
  1126 ;;  spbrgh          1    3[BANK0 ] unsigned char 
  1127 ;;  spen            1    4[BANK0 ] unsigned char 
  1128 ;;  rx9             1    5[BANK0 ] unsigned char 
  1129 ;;  cren            1    6[BANK0 ] unsigned char 
  1130 ;;  txen            1    7[BANK0 ] unsigned char 
  1131 ;;  tx9             1    8[BANK0 ] unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  sinc            1    3[COMMON] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,0
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1143 ;;      Params:         0       9       0       0       0
  1144 ;;      Locals:         1       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0
  1146 ;;      Totals:         1       9       0       0       0
  1147 ;;Total ram usage:       10 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_setup
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _EUSART_C
  1159  0336                     _EUSART_C:
  1160                           
  1161                           ;incstack = 0
  1162                           ; Regs used in _EUSART_C: [wreg+status,0]
  1163                           ;EUSART_C@sinc stored from wreg
  1164  0336  00F3               	movwf	EUSART_C@sinc
  1165  0337                     l1504:
  1166                           
  1167                           ;EUSART.c: 3: void EUSART_C ( uint8_t sinc, uint8_t brgh, uint8_t brg16, uint8_t spbrg,;
      +                          EUSART.c: 4:                 uint8_t spbrgh, uint8_t spen, uint8_t rx9, uint8_t cren,;EU
      +                          SART.c: 5:                 uint8_t txen, uint8_t tx9){;EUSART.c: 8:     TXSTAbits.SYNC =
      +                           sinc;
  1168  0337  0C73               	rrf	EUSART_C@sinc,w
  1169  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1170  0339  1303               	bcf	3,6	;RP1=0, select bank1
  1171  033A  1C03               	skipc
  1172  033B  1218               	bcf	24,4	;volatile
  1173  033C  1803               	skipnc
  1174  033D  1618               	bsf	24,4	;volatile
  1175                           
  1176                           ;EUSART.c: 9:     TXSTAbits.BRGH = brgh;
  1177  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1178  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0340  0C39               	rrf	EUSART_C@brgh,w
  1180  0341  1683               	bsf	3,5	;RP0=1, select bank1
  1181  0342  1303               	bcf	3,6	;RP1=0, select bank1
  1182  0343  1C03               	skipc
  1183  0344  1118               	bcf	24,2	;volatile
  1184  0345  1803               	skipnc
  1185  0346  1518               	bsf	24,2	;volatile
  1186                           
  1187                           ;EUSART.c: 10:     BAUDCTLbits.BRG16 = brg16;
  1188  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0349  0C3A               	rrf	EUSART_C@brg16,w
  1191  034A  1683               	bsf	3,5	;RP0=1, select bank3
  1192  034B  1703               	bsf	3,6	;RP1=1, select bank3
  1193  034C  1C03               	skipc
  1194  034D  1187               	bcf	7,3	;volatile
  1195  034E  1803               	skipnc
  1196  034F  1587               	bsf	7,3	;volatile
  1197  0350                     l1506:
  1198                           
  1199                           ;EUSART.c: 13:     SPBRG = spbrg;
  1200  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0352  083B               	movf	EUSART_C@spbrg,w
  1203  0353  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0354  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0355  0099               	movwf	25	;volatile
  1206  0356                     l1508:
  1207                           
  1208                           ;EUSART.c: 14:     SPBRGH = spbrgh;
  1209  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0358  083C               	movf	EUSART_C@spbrgh,w
  1212  0359  1683               	bsf	3,5	;RP0=1, select bank1
  1213  035A  1303               	bcf	3,6	;RP1=0, select bank1
  1214  035B  009A               	movwf	26	;volatile
  1215                           
  1216                           ;EUSART.c: 16:     RCSTAbits.SPEN = spen;
  1217  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1218  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1219  035E  0C3D               	rrf	EUSART_C@spen,w
  1220  035F  1C03               	skipc
  1221  0360  1398               	bcf	24,7	;volatile
  1222  0361  1803               	skipnc
  1223  0362  1798               	bsf	24,7	;volatile
  1224                           
  1225                           ;EUSART.c: 17:     RCSTAbits.RX9 = rx9;
  1226  0363  0C3E               	rrf	EUSART_C@rx9,w
  1227  0364  1C03               	skipc
  1228  0365  1318               	bcf	24,6	;volatile
  1229  0366  1803               	skipnc
  1230  0367  1718               	bsf	24,6	;volatile
  1231                           
  1232                           ;EUSART.c: 18:     RCSTAbits.CREN = cren;
  1233  0368  0C3F               	rrf	EUSART_C@cren,w
  1234  0369  1C03               	skipc
  1235  036A  1218               	bcf	24,4	;volatile
  1236  036B  1803               	skipnc
  1237  036C  1618               	bsf	24,4	;volatile
  1238                           
  1239                           ;EUSART.c: 20:     TXSTAbits.TXEN = txen;
  1240  036D  0C40               	rrf	EUSART_C@txen,w
  1241  036E  1683               	bsf	3,5	;RP0=1, select bank1
  1242  036F  1303               	bcf	3,6	;RP1=0, select bank1
  1243  0370  1C03               	skipc
  1244  0371  1298               	bcf	24,5	;volatile
  1245  0372  1803               	skipnc
  1246  0373  1698               	bsf	24,5	;volatile
  1247                           
  1248                           ;EUSART.c: 21:     TXSTAbits.TX9 = tx9;
  1249  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0376  0C41               	rrf	EUSART_C@tx9,w
  1252  0377  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0378  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0379  1C03               	skipc
  1255  037A  1318               	bcf	24,6	;volatile
  1256  037B  1803               	skipnc
  1257  037C  1718               	bsf	24,6	;volatile
  1258  037D                     l222:
  1259  037D  0008               	return
  1260  037E                     __end_of_EUSART_C:
  1261                           
  1262                           	psect	text3
  1263  002C                     __ptext3:	
  1264 ;; *************** function _ValoresDisplay *****************
  1265 ;; Defined at:
  1266 ;;		line 174 in file "LCDMain.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          0       5       0       0       0
  1283 ;;      Totals:         0       5       0       0       0
  1284 ;;Total ram usage:        5 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; Hardware stack levels required when called: 3
  1287 ;; This function calls:
  1288 ;;		_Map255a500
  1289 ;;		_NumAAscii
  1290 ;;		_divisor
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _ValoresDisplay
  1298  002C                     _ValoresDisplay:
  1299  002C                     l1920:	
  1300                           ;incstack = 0
  1301                           ; Regs used in _ValoresDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1302                           
  1303                           
  1304                           ;LCDMain.c: 175:     Map255a500(S0,&S0D);
  1305  002C  302E               	movlw	(low (_S0D| 0))& (0+255)
  1306  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1307  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1308  002F  00CB               	movwf	??_ValoresDisplay
  1309  0030  084B               	movf	??_ValoresDisplay,w
  1310  0031  00C3               	movwf	Map255a500@b
  1311  0032  082B               	movf	_S0,w
  1312  0033  120A  118A  23FA  120A  118A  	fcall	_Map255a500
  1313                           
  1314                           ;LCDMain.c: 176:     divisor(S0D,&S0DU,&S0DD,&S0DC);
  1315  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1317  003A  082F               	movf	_S0D+1,w
  1318  003B  00C4               	movwf	divisor@valor+1
  1319  003C  082E               	movf	_S0D,w
  1320  003D  00C3               	movwf	divisor@valor
  1321  003E  3036               	movlw	(low (_S0DU| 0))& (0+255)
  1322  003F  00CB               	movwf	??_ValoresDisplay
  1323  0040  084B               	movf	??_ValoresDisplay,w
  1324  0041  00C5               	movwf	divisor@unidades
  1325  0042  3037               	movlw	(low (_S0DD| 0))& (0+255)
  1326  0043  00CC               	movwf	??_ValoresDisplay+1
  1327  0044  084C               	movf	??_ValoresDisplay+1,w
  1328  0045  00C6               	movwf	divisor@decena
  1329  0046  3038               	movlw	(low (_S0DC| 0))& (0+255)
  1330  0047  00CD               	movwf	??_ValoresDisplay+2
  1331  0048  084D               	movf	??_ValoresDisplay+2,w
  1332  0049  00C7               	movwf	divisor@centena
  1333  004A  120A  118A  2293  120A  118A  	fcall	_divisor
  1334                           
  1335                           ;LCDMain.c: 178:     Map255a500(S1,&S1D);
  1336  004F  302C               	movlw	(low (_S1D| 0))& (0+255)
  1337  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0052  00CB               	movwf	??_ValoresDisplay
  1340  0053  084B               	movf	??_ValoresDisplay,w
  1341  0054  00C3               	movwf	Map255a500@b
  1342  0055  082A               	movf	_S1,w
  1343  0056  120A  118A  23FA  120A  118A  	fcall	_Map255a500
  1344                           
  1345                           ;LCDMain.c: 179:     divisor(S1D,&S1DU,&S1DD,&S1DC);
  1346  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1347  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1348  005D  082D               	movf	_S1D+1,w
  1349  005E  00C4               	movwf	divisor@valor+1
  1350  005F  082C               	movf	_S1D,w
  1351  0060  00C3               	movwf	divisor@valor
  1352  0061  3033               	movlw	(low (_S1DU| 0))& (0+255)
  1353  0062  00CB               	movwf	??_ValoresDisplay
  1354  0063  084B               	movf	??_ValoresDisplay,w
  1355  0064  00C5               	movwf	divisor@unidades
  1356  0065  3034               	movlw	(low (_S1DD| 0))& (0+255)
  1357  0066  00CC               	movwf	??_ValoresDisplay+1
  1358  0067  084C               	movf	??_ValoresDisplay+1,w
  1359  0068  00C6               	movwf	divisor@decena
  1360  0069  3035               	movlw	(low (_S1DC| 0))& (0+255)
  1361  006A  00CD               	movwf	??_ValoresDisplay+2
  1362  006B  084D               	movf	??_ValoresDisplay+2,w
  1363  006C  00C7               	movwf	divisor@centena
  1364  006D  120A  118A  2293  120A  118A  	fcall	_divisor
  1365                           
  1366                           ;LCDMain.c: 182:     divisor(S2,&S2DU,&S2DD,&S2DC);
  1367  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0074  0829               	movf	_S2,w
  1370  0075  00CB               	movwf	??_ValoresDisplay
  1371  0076  01CC               	clrf	??_ValoresDisplay+1
  1372  0077  084B               	movf	??_ValoresDisplay,w
  1373  0078  00C3               	movwf	divisor@valor
  1374  0079  084C               	movf	??_ValoresDisplay+1,w
  1375  007A  00C4               	movwf	divisor@valor+1
  1376  007B  3030               	movlw	(low (_S2DU| 0))& (0+255)
  1377  007C  00CD               	movwf	??_ValoresDisplay+2
  1378  007D  084D               	movf	??_ValoresDisplay+2,w
  1379  007E  00C5               	movwf	divisor@unidades
  1380  007F  3031               	movlw	(low (_S2DD| 0))& (0+255)
  1381  0080  00CE               	movwf	??_ValoresDisplay+3
  1382  0081  084E               	movf	??_ValoresDisplay+3,w
  1383  0082  00C6               	movwf	divisor@decena
  1384  0083  3032               	movlw	(low (_S2DC| 0))& (0+255)
  1385  0084  00CF               	movwf	??_ValoresDisplay+4
  1386  0085  084F               	movf	??_ValoresDisplay+4,w
  1387  0086  00C7               	movwf	divisor@centena
  1388  0087  120A  118A  2293  120A  118A  	fcall	_divisor
  1389                           
  1390                           ;LCDMain.c: 184:     unidades0 = NumAAscii(S0DU);
  1391  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1392  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1393  008E  0836               	movf	_S0DU,w
  1394  008F  120A  118A  237E  120A  118A  	fcall	_NumAAscii
  1395  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0096  00CB               	movwf	??_ValoresDisplay
  1398  0097  084B               	movf	??_ValoresDisplay,w
  1399  0098  00A8               	movwf	_unidades0
  1400                           
  1401                           ;LCDMain.c: 185:     decenas0 = NumAAscii(S0DD);
  1402  0099  0837               	movf	_S0DD,w
  1403  009A  120A  118A  237E  120A  118A  	fcall	_NumAAscii
  1404  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1405  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1406  00A1  00CB               	movwf	??_ValoresDisplay
  1407  00A2  084B               	movf	??_ValoresDisplay,w
  1408  00A3  00F8               	movwf	_decenas0
  1409                           
  1410                           ;LCDMain.c: 186:     centenas0 = NumAAscii(S0DC);
  1411  00A4  0838               	movf	_S0DC,w
  1412  00A5  120A  118A  237E  120A  118A  	fcall	_NumAAscii
  1413  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1414  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1415  00AC  00CB               	movwf	??_ValoresDisplay
  1416  00AD  084B               	movf	??_ValoresDisplay,w
  1417  00AE  00F9               	movwf	_centenas0
  1418                           
  1419                           ;LCDMain.c: 188:     unidades1 = NumAAscii(S1DU);
  1420  00AF  0833               	movf	_S1DU,w
  1421  00B0  120A  118A  237E  120A  118A  	fcall	_NumAAscii
  1422  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1423  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1424  00B7  00CB               	movwf	??_ValoresDisplay
  1425  00B8  084B               	movf	??_ValoresDisplay,w
  1426  00B9  00A5               	movwf	_unidades1
  1427                           
  1428                           ;LCDMain.c: 189:     decenas1 = NumAAscii(S1DD);
  1429  00BA  0834               	movf	_S1DD,w
  1430  00BB  120A  118A  237E  120A  118A  	fcall	_NumAAscii
  1431  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1432  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1433  00C2  00CB               	movwf	??_ValoresDisplay
  1434  00C3  084B               	movf	??_ValoresDisplay,w
  1435  00C4  00A6               	movwf	_decenas1
  1436                           
  1437                           ;LCDMain.c: 190:     centenas1 = NumAAscii(S1DC);
  1438  00C5  0835               	movf	_S1DC,w
  1439  00C6  120A  118A  237E  120A  118A  	fcall	_NumAAscii
  1440  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1441  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1442  00CD  00CB               	movwf	??_ValoresDisplay
  1443  00CE  084B               	movf	??_ValoresDisplay,w
  1444  00CF  00A7               	movwf	_centenas1
  1445                           
  1446                           ;LCDMain.c: 192:     unidades2 = NumAAscii(S2DU);
  1447  00D0  0830               	movf	_S2DU,w
  1448  00D1  120A  118A  237E  120A  118A  	fcall	_NumAAscii
  1449  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1450  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1451  00D8  00CB               	movwf	??_ValoresDisplay
  1452  00D9  084B               	movf	??_ValoresDisplay,w
  1453  00DA  00A2               	movwf	_unidades2
  1454                           
  1455                           ;LCDMain.c: 193:     decenas2 = NumAAscii(S2DD);
  1456  00DB  0831               	movf	_S2DD,w
  1457  00DC  120A  118A  237E  120A  118A  	fcall	_NumAAscii
  1458  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1459  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1460  00E3  00CB               	movwf	??_ValoresDisplay
  1461  00E4  084B               	movf	??_ValoresDisplay,w
  1462  00E5  00A3               	movwf	_decenas2
  1463                           
  1464                           ;LCDMain.c: 194:     centenas2 = NumAAscii(S2DC);
  1465  00E6  0832               	movf	_S2DC,w
  1466  00E7  120A  118A  237E  120A  118A  	fcall	_NumAAscii
  1467  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1468  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1469  00EE  00CB               	movwf	??_ValoresDisplay
  1470  00EF  084B               	movf	??_ValoresDisplay,w
  1471  00F0  00A4               	movwf	_centenas2
  1472  00F1                     l150:
  1473  00F1  0008               	return
  1474  00F2                     __end_of_ValoresDisplay:
  1475                           
  1476                           	psect	text4
  1477  0293                     __ptext4:	
  1478 ;; *************** function _divisor *****************
  1479 ;; Defined at:
  1480 ;;		line 167 in file "LCDMain.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  valor           2   10[BANK0 ] int 
  1483 ;;  unidades        1   12[BANK0 ] PTR unsigned char 
  1484 ;;		 -> S2DU(1), S1DU(1), S0DU(1), 
  1485 ;;  decena          1   13[BANK0 ] PTR unsigned char 
  1486 ;;		 -> S2DD(1), S1DD(1), S0DD(1), 
  1487 ;;  centena         1   14[BANK0 ] PTR unsigned char 
  1488 ;;		 -> S2DC(1), S1DC(1), S0DC(1), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  cociente0       2   16[BANK0 ] int 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1500 ;;      Params:         0       5       0       0       0
  1501 ;;      Locals:         0       2       0       0       0
  1502 ;;      Temps:          0       1       0       0       0
  1503 ;;      Totals:         0       8       0       0       0
  1504 ;;Total ram usage:        8 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 2
  1507 ;; This function calls:
  1508 ;;		___awdiv
  1509 ;;		___awmod
  1510 ;; This function is called by:
  1511 ;;		_ValoresDisplay
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _divisor
  1517  0293                     _divisor:
  1518  0293                     l1850:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1521                           
  1522                           
  1523                           ;LCDMain.c: 168:     *unidades = valor%10;
  1524  0293  300A               	movlw	10
  1525  0294  00F3               	movwf	___awmod@divisor
  1526  0295  3000               	movlw	0
  1527  0296  00F4               	movwf	___awmod@divisor+1
  1528  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0299  0844               	movf	divisor@valor+1,w
  1531  029A  00F6               	movwf	___awmod@dividend+1
  1532  029B  0843               	movf	divisor@valor,w
  1533  029C  00F5               	movwf	___awmod@dividend
  1534  029D  120A  118A  21DE  120A  118A  	fcall	___awmod
  1535  02A2  0873               	movf	?___awmod,w
  1536  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1537  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1538  02A5  00C8               	movwf	??_divisor
  1539  02A6  0845               	movf	divisor@unidades,w
  1540  02A7  0084               	movwf	4
  1541  02A8  0848               	movf	??_divisor,w
  1542  02A9  1383               	bcf	3,7	;select IRP bank0
  1543  02AA  0080               	movwf	0
  1544  02AB                     l1852:
  1545                           
  1546                           ;LCDMain.c: 169:     int cociente0 = (int)(valor/10);
  1547  02AB  300A               	movlw	10
  1548  02AC  00BB               	movwf	___awdiv@divisor
  1549  02AD  3000               	movlw	0
  1550  02AE  00BC               	movwf	___awdiv@divisor+1
  1551  02AF  0844               	movf	divisor@valor+1,w
  1552  02B0  00BE               	movwf	___awdiv@dividend+1
  1553  02B1  0843               	movf	divisor@valor,w
  1554  02B2  00BD               	movwf	___awdiv@dividend
  1555  02B3  120A  118A  2175  120A  118A  	fcall	___awdiv
  1556  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1557  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1558  02BA  083C               	movf	?___awdiv+1,w
  1559  02BB  00CA               	movwf	divisor@cociente0+1
  1560  02BC  083B               	movf	?___awdiv,w
  1561  02BD  00C9               	movwf	divisor@cociente0
  1562  02BE                     l1854:
  1563                           
  1564                           ;LCDMain.c: 170:     *decena = cociente0%10;
  1565  02BE  300A               	movlw	10
  1566  02BF  00F3               	movwf	___awmod@divisor
  1567  02C0  3000               	movlw	0
  1568  02C1  00F4               	movwf	___awmod@divisor+1
  1569  02C2  084A               	movf	divisor@cociente0+1,w
  1570  02C3  00F6               	movwf	___awmod@dividend+1
  1571  02C4  0849               	movf	divisor@cociente0,w
  1572  02C5  00F5               	movwf	___awmod@dividend
  1573  02C6  120A  118A  21DE  120A  118A  	fcall	___awmod
  1574  02CB  0873               	movf	?___awmod,w
  1575  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1576  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1577  02CE  00C8               	movwf	??_divisor
  1578  02CF  0846               	movf	divisor@decena,w
  1579  02D0  0084               	movwf	4
  1580  02D1  0848               	movf	??_divisor,w
  1581  02D2  1383               	bcf	3,7	;select IRP bank0
  1582  02D3  0080               	movwf	0
  1583  02D4                     l1856:
  1584                           
  1585                           ;LCDMain.c: 171:     *centena = (int)(cociente0/10);
  1586  02D4  300A               	movlw	10
  1587  02D5  00BB               	movwf	___awdiv@divisor
  1588  02D6  3000               	movlw	0
  1589  02D7  00BC               	movwf	___awdiv@divisor+1
  1590  02D8  084A               	movf	divisor@cociente0+1,w
  1591  02D9  00BE               	movwf	___awdiv@dividend+1
  1592  02DA  0849               	movf	divisor@cociente0,w
  1593  02DB  00BD               	movwf	___awdiv@dividend
  1594  02DC  120A  118A  2175  120A  118A  	fcall	___awdiv
  1595  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1596  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1597  02E3  083B               	movf	?___awdiv,w
  1598  02E4  00C8               	movwf	??_divisor
  1599  02E5  0847               	movf	divisor@centena,w
  1600  02E6  0084               	movwf	4
  1601  02E7  0848               	movf	??_divisor,w
  1602  02E8  1383               	bcf	3,7	;select IRP bank0
  1603  02E9  0080               	movwf	0
  1604  02EA                     l147:
  1605  02EA  0008               	return
  1606  02EB                     __end_of_divisor:
  1607                           
  1608                           	psect	text5
  1609  01DE                     __ptext5:	
  1610 ;; *************** function ___awmod *****************
  1611 ;; Defined at:
  1612 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  divisor         2    3[COMMON] int 
  1615 ;;  dividend        2    5[COMMON] int 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  sign            1    1[BANK0 ] unsigned char 
  1618 ;;  counter         1    0[BANK0 ] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2    3[COMMON] int 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         4       0       0       0       0
  1629 ;;      Locals:         0       2       0       0       0
  1630 ;;      Temps:          1       0       0       0       0
  1631 ;;      Totals:         5       2       0       0       0
  1632 ;;Total ram usage:        7 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_divisor
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function ___awmod
  1644  01DE                     ___awmod:
  1645  01DE                     l1782:	
  1646                           ;incstack = 0
  1647                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1648                           
  1649  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1650  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1651  01E0  01BA               	clrf	___awmod@sign
  1652  01E1                     l1784:
  1653  01E1  1FF6               	btfss	___awmod@dividend+1,7
  1654  01E2  29E4               	goto	u771
  1655  01E3  29E5               	goto	u770
  1656  01E4                     u771:
  1657  01E4  29EC               	goto	l1790
  1658  01E5                     u770:
  1659  01E5                     l1786:
  1660  01E5  09F5               	comf	___awmod@dividend,f
  1661  01E6  09F6               	comf	___awmod@dividend+1,f
  1662  01E7  0AF5               	incf	___awmod@dividend,f
  1663  01E8  1903               	skipnz
  1664  01E9  0AF6               	incf	___awmod@dividend+1,f
  1665  01EA                     l1788:
  1666  01EA  01BA               	clrf	___awmod@sign
  1667  01EB  0ABA               	incf	___awmod@sign,f
  1668  01EC                     l1790:
  1669  01EC  1FF4               	btfss	___awmod@divisor+1,7
  1670  01ED  29EF               	goto	u781
  1671  01EE  29F0               	goto	u780
  1672  01EF                     u781:
  1673  01EF  29F5               	goto	l1794
  1674  01F0                     u780:
  1675  01F0                     l1792:
  1676  01F0  09F3               	comf	___awmod@divisor,f
  1677  01F1  09F4               	comf	___awmod@divisor+1,f
  1678  01F2  0AF3               	incf	___awmod@divisor,f
  1679  01F3  1903               	skipnz
  1680  01F4  0AF4               	incf	___awmod@divisor+1,f
  1681  01F5                     l1794:
  1682  01F5  0873               	movf	___awmod@divisor,w
  1683  01F6  0474               	iorwf	___awmod@divisor+1,w
  1684  01F7  1903               	btfsc	3,2
  1685  01F8  29FA               	goto	u791
  1686  01F9  29FB               	goto	u790
  1687  01FA                     u791:
  1688  01FA  2A2A               	goto	l1812
  1689  01FB                     u790:
  1690  01FB                     l1796:
  1691  01FB  01B9               	clrf	___awmod@counter
  1692  01FC  0AB9               	incf	___awmod@counter,f
  1693  01FD  2A09               	goto	l1802
  1694  01FE                     l1798:
  1695  01FE  3001               	movlw	1
  1696  01FF                     u805:
  1697  01FF  1003               	clrc
  1698  0200  0DF3               	rlf	___awmod@divisor,f
  1699  0201  0DF4               	rlf	___awmod@divisor+1,f
  1700  0202  3EFF               	addlw	-1
  1701  0203  1D03               	skipz
  1702  0204  29FF               	goto	u805
  1703  0205                     l1800:
  1704  0205  3001               	movlw	1
  1705  0206  00F7               	movwf	??___awmod
  1706  0207  0877               	movf	??___awmod,w
  1707  0208  07B9               	addwf	___awmod@counter,f
  1708  0209                     l1802:
  1709  0209  1FF4               	btfss	___awmod@divisor+1,7
  1710  020A  2A0C               	goto	u811
  1711  020B  2A0D               	goto	u810
  1712  020C                     u811:
  1713  020C  29FE               	goto	l1798
  1714  020D                     u810:
  1715  020D                     l1804:
  1716  020D  0874               	movf	___awmod@divisor+1,w
  1717  020E  0276               	subwf	___awmod@dividend+1,w
  1718  020F  1D03               	skipz
  1719  0210  2A13               	goto	u825
  1720  0211  0873               	movf	___awmod@divisor,w
  1721  0212  0275               	subwf	___awmod@dividend,w
  1722  0213                     u825:
  1723  0213  1C03               	skipc
  1724  0214  2A16               	goto	u821
  1725  0215  2A17               	goto	u820
  1726  0216                     u821:
  1727  0216  2A1D               	goto	l1808
  1728  0217                     u820:
  1729  0217                     l1806:
  1730  0217  0873               	movf	___awmod@divisor,w
  1731  0218  02F5               	subwf	___awmod@dividend,f
  1732  0219  0874               	movf	___awmod@divisor+1,w
  1733  021A  1C03               	skipc
  1734  021B  03F6               	decf	___awmod@dividend+1,f
  1735  021C  02F6               	subwf	___awmod@dividend+1,f
  1736  021D                     l1808:
  1737  021D  3001               	movlw	1
  1738  021E                     u835:
  1739  021E  1003               	clrc
  1740  021F  0CF4               	rrf	___awmod@divisor+1,f
  1741  0220  0CF3               	rrf	___awmod@divisor,f
  1742  0221  3EFF               	addlw	-1
  1743  0222  1D03               	skipz
  1744  0223  2A1E               	goto	u835
  1745  0224                     l1810:
  1746  0224  3001               	movlw	1
  1747  0225  02B9               	subwf	___awmod@counter,f
  1748  0226  1D03               	btfss	3,2
  1749  0227  2A29               	goto	u841
  1750  0228  2A2A               	goto	u840
  1751  0229                     u841:
  1752  0229  2A0D               	goto	l1804
  1753  022A                     u840:
  1754  022A                     l1812:
  1755  022A  083A               	movf	___awmod@sign,w
  1756  022B  1903               	btfsc	3,2
  1757  022C  2A2E               	goto	u851
  1758  022D  2A2F               	goto	u850
  1759  022E                     u851:
  1760  022E  2A34               	goto	l1816
  1761  022F                     u850:
  1762  022F                     l1814:
  1763  022F  09F5               	comf	___awmod@dividend,f
  1764  0230  09F6               	comf	___awmod@dividend+1,f
  1765  0231  0AF5               	incf	___awmod@dividend,f
  1766  0232  1903               	skipnz
  1767  0233  0AF6               	incf	___awmod@dividend+1,f
  1768  0234                     l1816:
  1769  0234  0876               	movf	___awmod@dividend+1,w
  1770  0235  00F4               	movwf	?___awmod+1
  1771  0236  0875               	movf	___awmod@dividend,w
  1772  0237  00F3               	movwf	?___awmod
  1773  0238                     l474:
  1774  0238  0008               	return
  1775  0239                     __end_of___awmod:
  1776                           
  1777                           	psect	text6
  1778  037E                     __ptext6:	
  1779 ;; *************** function _NumAAscii *****************
  1780 ;; Defined at:
  1781 ;;		line 199 in file "LCDMain.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;  valor           1    wreg     unsigned char 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  valor           1    5[COMMON] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      unsigned char 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         0       0       0       0       0
  1796 ;;      Locals:         1       0       0       0       0
  1797 ;;      Temps:          2       0       0       0       0
  1798 ;;      Totals:         3       0       0       0       0
  1799 ;;Total ram usage:        3 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_ValoresDisplay
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _NumAAscii
  1811  037E                     _NumAAscii:
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _NumAAscii: [wreg-fsr0h+status,2+status,0]
  1815                           ;NumAAscii@valor stored from wreg
  1816  037E  00F5               	movwf	NumAAscii@valor
  1817  037F                     l1434:
  1818                           
  1819                           ;LCDMain.c: 200:     switch(valor){
  1820  037F  2B94               	goto	l1498
  1821  0380                     l1436:
  1822                           
  1823                           ;LCDMain.c: 202:             return 48;
  1824  0380  3030               	movlw	48
  1825  0381  2BBC               	goto	l155
  1826  0382                     l1442:
  1827                           
  1828                           ;LCDMain.c: 205:             return 49;
  1829  0382  3031               	movlw	49
  1830  0383  2BBC               	goto	l155
  1831  0384                     l1448:
  1832                           
  1833                           ;LCDMain.c: 208:             return 50;
  1834  0384  3032               	movlw	50
  1835  0385  2BBC               	goto	l155
  1836  0386                     l1454:
  1837                           
  1838                           ;LCDMain.c: 211:             return 51;
  1839  0386  3033               	movlw	51
  1840  0387  2BBC               	goto	l155
  1841  0388                     l1460:
  1842                           
  1843                           ;LCDMain.c: 214:             return 52;
  1844  0388  3034               	movlw	52
  1845  0389  2BBC               	goto	l155
  1846  038A                     l1466:
  1847                           
  1848                           ;LCDMain.c: 217:             return 53;
  1849  038A  3035               	movlw	53
  1850  038B  2BBC               	goto	l155
  1851  038C                     l1472:
  1852                           
  1853                           ;LCDMain.c: 220:             return 54;
  1854  038C  3036               	movlw	54
  1855  038D  2BBC               	goto	l155
  1856  038E                     l1478:
  1857                           
  1858                           ;LCDMain.c: 223:             return 55;
  1859  038E  3037               	movlw	55
  1860  038F  2BBC               	goto	l155
  1861  0390                     l1484:
  1862                           
  1863                           ;LCDMain.c: 226:             return 56;
  1864  0390  3038               	movlw	56
  1865  0391  2BBC               	goto	l155
  1866  0392                     l1490:
  1867                           
  1868                           ;LCDMain.c: 229:             return 57;
  1869  0392  3039               	movlw	57
  1870  0393  2BBC               	goto	l155
  1871  0394                     l1498:
  1872  0394  0875               	movf	NumAAscii@valor,w
  1873  0395  00F3               	movwf	??_NumAAscii
  1874  0396  01F4               	clrf	??_NumAAscii+1
  1875                           
  1876                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1877                           ; Switch size 1, requested type "simple"
  1878                           ; Number of cases is 1, Range of values is 0 to 0
  1879                           ; switch strategies available:
  1880                           ; Name         Instructions Cycles
  1881                           ; simple_byte            4     3 (average)
  1882                           ; direct_byte           11     8 (fixed)
  1883                           ; jumptable            260     6 (fixed)
  1884                           ;	Chosen strategy is simple_byte
  1885  0397  0874               	movf	??_NumAAscii+1,w
  1886  0398  3A00               	xorlw	0	; case 0
  1887  0399  1903               	skipnz
  1888  039A  2B9C               	goto	l1980
  1889  039B  2BBC               	goto	l155
  1890  039C                     l1980:
  1891                           
  1892                           ; Switch size 1, requested type "simple"
  1893                           ; Number of cases is 10, Range of values is 0 to 9
  1894                           ; switch strategies available:
  1895                           ; Name         Instructions Cycles
  1896                           ; simple_byte           31    16 (average)
  1897                           ; direct_byte           38     8 (fixed)
  1898                           ; jumptable            260     6 (fixed)
  1899                           ;	Chosen strategy is simple_byte
  1900  039C  0873               	movf	??_NumAAscii,w
  1901  039D  3A00               	xorlw	0	; case 0
  1902  039E  1903               	skipnz
  1903  039F  2B80               	goto	l1436
  1904  03A0  3A01               	xorlw	1	; case 1
  1905  03A1  1903               	skipnz
  1906  03A2  2B82               	goto	l1442
  1907  03A3  3A03               	xorlw	3	; case 2
  1908  03A4  1903               	skipnz
  1909  03A5  2B84               	goto	l1448
  1910  03A6  3A01               	xorlw	1	; case 3
  1911  03A7  1903               	skipnz
  1912  03A8  2B86               	goto	l1454
  1913  03A9  3A07               	xorlw	7	; case 4
  1914  03AA  1903               	skipnz
  1915  03AB  2B88               	goto	l1460
  1916  03AC  3A01               	xorlw	1	; case 5
  1917  03AD  1903               	skipnz
  1918  03AE  2B8A               	goto	l1466
  1919  03AF  3A03               	xorlw	3	; case 6
  1920  03B0  1903               	skipnz
  1921  03B1  2B8C               	goto	l1472
  1922  03B2  3A01               	xorlw	1	; case 7
  1923  03B3  1903               	skipnz
  1924  03B4  2B8E               	goto	l1478
  1925  03B5  3A0F               	xorlw	15	; case 8
  1926  03B6  1903               	skipnz
  1927  03B7  2B90               	goto	l1484
  1928  03B8  3A01               	xorlw	1	; case 9
  1929  03B9  1903               	skipnz
  1930  03BA  2B92               	goto	l1490
  1931  03BB  2BBC               	goto	l155
  1932  03BC                     l155:
  1933  03BC  0008               	return
  1934  03BD                     __end_of_NumAAscii:
  1935                           
  1936                           	psect	text7
  1937  03FA                     __ptext7:	
  1938 ;; *************** function _Map255a500 *****************
  1939 ;; Defined at:
  1940 ;;		line 140 in file "LCDMain.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  a               1    wreg     unsigned char 
  1943 ;;  b               1   10[BANK0 ] PTR int 
  1944 ;;		 -> S1D(2), S0D(2), 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  a               1   13[BANK0 ] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       1       0       0       0
  1957 ;;      Locals:         0       1       0       0       0
  1958 ;;      Temps:          0       2       0       0       0
  1959 ;;      Totals:         0       4       0       0       0
  1960 ;;Total ram usage:        4 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 2
  1963 ;; This function calls:
  1964 ;;		___awdiv
  1965 ;;		___wmul
  1966 ;; This function is called by:
  1967 ;;		_ValoresDisplay
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           
  1972                           ;psect for function _Map255a500
  1973  03FA                     _Map255a500:
  1974                           
  1975                           ;incstack = 0
  1976                           ; Regs used in _Map255a500: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1977                           ;Map255a500@a stored from wreg
  1978  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1979  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1980  03FC  00C6               	movwf	Map255a500@a
  1981  03FD                     l1820:
  1982                           
  1983                           ;LCDMain.c: 141:     *b = (int)a*100/51;
  1984  03FD  3033               	movlw	51
  1985  03FE  00BB               	movwf	___awdiv@divisor
  1986  03FF  3000               	movlw	0
  1987  0400  00BC               	movwf	___awdiv@divisor+1
  1988  0401  0846               	movf	Map255a500@a,w
  1989  0402  00C4               	movwf	??_Map255a500
  1990  0403  01C5               	clrf	??_Map255a500+1
  1991  0404  0844               	movf	??_Map255a500,w
  1992  0405  00F3               	movwf	___wmul@multiplier
  1993  0406  0845               	movf	??_Map255a500+1,w
  1994  0407  00F4               	movwf	___wmul@multiplier+1
  1995  0408  3064               	movlw	100
  1996  0409  00F5               	movwf	___wmul@multiplicand
  1997  040A  3000               	movlw	0
  1998  040B  00F6               	movwf	___wmul@multiplicand+1
  1999  040C  120A  118A  2481  120A  118A  	fcall	___wmul
  2000  0411  0874               	movf	?___wmul+1,w
  2001  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0414  00BE               	movwf	___awdiv@dividend+1
  2004  0415  0873               	movf	?___wmul,w
  2005  0416  00BD               	movwf	___awdiv@dividend
  2006  0417  120A  118A  2175  120A  118A  	fcall	___awdiv
  2007  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2008  041D  1303               	bcf	3,6	;RP1=0, select bank0
  2009  041E  0843               	movf	Map255a500@b,w
  2010  041F  0084               	movwf	4
  2011  0420  083B               	movf	?___awdiv,w
  2012  0421  1383               	bcf	3,7	;select IRP bank0
  2013  0422  0080               	movwf	0
  2014  0423  0A84               	incf	4,f
  2015  0424  083C               	movf	?___awdiv+1,w
  2016  0425  0080               	movwf	0
  2017  0426                     l141:
  2018  0426  0008               	return
  2019  0427                     __end_of_Map255a500:
  2020                           
  2021                           	psect	text8
  2022  0481                     __ptext8:	
  2023 ;; *************** function ___wmul *****************
  2024 ;; Defined at:
  2025 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  multiplier      2    3[COMMON] unsigned int 
  2028 ;;  multiplicand    2    5[COMMON] unsigned int 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  product         2    0[BANK0 ] unsigned int 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2    3[COMMON] unsigned int 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         4       0       0       0       0
  2041 ;;      Locals:         0       2       0       0       0
  2042 ;;      Temps:          0       0       0       0       0
  2043 ;;      Totals:         4       2       0       0       0
  2044 ;;Total ram usage:        6 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_Map255a500
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function ___wmul
  2056  0481                     ___wmul:
  2057  0481                     l1724:	
  2058                           ;incstack = 0
  2059                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2060                           
  2061  0481  1283               	bcf	3,5	;RP0=0, select bank0
  2062  0482  1303               	bcf	3,6	;RP1=0, select bank0
  2063  0483  01B9               	clrf	___wmul@product
  2064  0484  01BA               	clrf	___wmul@product+1
  2065  0485                     l1726:
  2066  0485  1C73               	btfss	___wmul@multiplier,0
  2067  0486  2C88               	goto	u631
  2068  0487  2C89               	goto	u630
  2069  0488                     u631:
  2070  0488  2C91               	goto	l308
  2071  0489                     u630:
  2072  0489                     l1728:
  2073  0489  0875               	movf	___wmul@multiplicand,w
  2074  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2075  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2076  048C  07B9               	addwf	___wmul@product,f
  2077  048D  1803               	skipnc
  2078  048E  0ABA               	incf	___wmul@product+1,f
  2079  048F  0876               	movf	___wmul@multiplicand+1,w
  2080  0490  07BA               	addwf	___wmul@product+1,f
  2081  0491                     l308:
  2082  0491  3001               	movlw	1
  2083  0492                     u645:
  2084  0492  1003               	clrc
  2085  0493  0DF5               	rlf	___wmul@multiplicand,f
  2086  0494  0DF6               	rlf	___wmul@multiplicand+1,f
  2087  0495  3EFF               	addlw	-1
  2088  0496  1D03               	skipz
  2089  0497  2C92               	goto	u645
  2090  0498                     l1730:
  2091  0498  3001               	movlw	1
  2092  0499                     u655:
  2093  0499  1003               	clrc
  2094  049A  0CF4               	rrf	___wmul@multiplier+1,f
  2095  049B  0CF3               	rrf	___wmul@multiplier,f
  2096  049C  3EFF               	addlw	-1
  2097  049D  1D03               	skipz
  2098  049E  2C99               	goto	u655
  2099  049F                     l1732:
  2100  049F  0873               	movf	___wmul@multiplier,w
  2101  04A0  0474               	iorwf	___wmul@multiplier+1,w
  2102  04A1  1D03               	btfss	3,2
  2103  04A2  2CA4               	goto	u661
  2104  04A3  2CA5               	goto	u660
  2105  04A4                     u661:
  2106  04A4  2C85               	goto	l1726
  2107  04A5                     u660:
  2108  04A5                     l1734:
  2109  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2110  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2111  04A7  083A               	movf	___wmul@product+1,w
  2112  04A8  00F4               	movwf	?___wmul+1
  2113  04A9  0839               	movf	___wmul@product,w
  2114  04AA  00F3               	movwf	?___wmul
  2115  04AB                     l310:
  2116  04AB  0008               	return
  2117  04AC                     __end_of___wmul:
  2118                           
  2119                           	psect	text9
  2120  0175                     __ptext9:	
  2121 ;; *************** function ___awdiv *****************
  2122 ;; Defined at:
  2123 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  divisor         2    2[BANK0 ] int 
  2126 ;;  dividend        2    4[BANK0 ] int 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  quotient        2    8[BANK0 ] int 
  2129 ;;  sign            1    7[BANK0 ] unsigned char 
  2130 ;;  counter         1    6[BANK0 ] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  2    2[BANK0 ] int 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2140 ;;      Params:         0       4       0       0       0
  2141 ;;      Locals:         0       4       0       0       0
  2142 ;;      Temps:          1       0       0       0       0
  2143 ;;      Totals:         1       8       0       0       0
  2144 ;;Total ram usage:        9 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 1
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_Map255a500
  2151 ;;		_divisor
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function ___awdiv
  2157  0175                     ___awdiv:
  2158  0175                     l1738:	
  2159                           ;incstack = 0
  2160                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2161                           
  2162  0175  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0176  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0177  01C0               	clrf	___awdiv@sign
  2165  0178                     l1740:
  2166  0178  1FBC               	btfss	___awdiv@divisor+1,7
  2167  0179  297B               	goto	u671
  2168  017A  297C               	goto	u670
  2169  017B                     u671:
  2170  017B  2983               	goto	l1746
  2171  017C                     u670:
  2172  017C                     l1742:
  2173  017C  09BB               	comf	___awdiv@divisor,f
  2174  017D  09BC               	comf	___awdiv@divisor+1,f
  2175  017E  0ABB               	incf	___awdiv@divisor,f
  2176  017F  1903               	skipnz
  2177  0180  0ABC               	incf	___awdiv@divisor+1,f
  2178  0181                     l1744:
  2179  0181  01C0               	clrf	___awdiv@sign
  2180  0182  0AC0               	incf	___awdiv@sign,f
  2181  0183                     l1746:
  2182  0183  1FBE               	btfss	___awdiv@dividend+1,7
  2183  0184  2986               	goto	u681
  2184  0185  2987               	goto	u680
  2185  0186                     u681:
  2186  0186  2990               	goto	l1752
  2187  0187                     u680:
  2188  0187                     l1748:
  2189  0187  09BD               	comf	___awdiv@dividend,f
  2190  0188  09BE               	comf	___awdiv@dividend+1,f
  2191  0189  0ABD               	incf	___awdiv@dividend,f
  2192  018A  1903               	skipnz
  2193  018B  0ABE               	incf	___awdiv@dividend+1,f
  2194  018C                     l1750:
  2195  018C  3001               	movlw	1
  2196  018D  00F7               	movwf	??___awdiv
  2197  018E  0877               	movf	??___awdiv,w
  2198  018F  06C0               	xorwf	___awdiv@sign,f
  2199  0190                     l1752:
  2200  0190  01C1               	clrf	___awdiv@quotient
  2201  0191  01C2               	clrf	___awdiv@quotient+1
  2202  0192                     l1754:
  2203  0192  083B               	movf	___awdiv@divisor,w
  2204  0193  043C               	iorwf	___awdiv@divisor+1,w
  2205  0194  1903               	btfsc	3,2
  2206  0195  2997               	goto	u691
  2207  0196  2998               	goto	u690
  2208  0197                     u691:
  2209  0197  29CF               	goto	l1774
  2210  0198                     u690:
  2211  0198                     l1756:
  2212  0198  01BF               	clrf	___awdiv@counter
  2213  0199  0ABF               	incf	___awdiv@counter,f
  2214  019A  29A6               	goto	l1762
  2215  019B                     l1758:
  2216  019B  3001               	movlw	1
  2217  019C                     u705:
  2218  019C  1003               	clrc
  2219  019D  0DBB               	rlf	___awdiv@divisor,f
  2220  019E  0DBC               	rlf	___awdiv@divisor+1,f
  2221  019F  3EFF               	addlw	-1
  2222  01A0  1D03               	skipz
  2223  01A1  299C               	goto	u705
  2224  01A2                     l1760:
  2225  01A2  3001               	movlw	1
  2226  01A3  00F7               	movwf	??___awdiv
  2227  01A4  0877               	movf	??___awdiv,w
  2228  01A5  07BF               	addwf	___awdiv@counter,f
  2229  01A6                     l1762:
  2230  01A6  1FBC               	btfss	___awdiv@divisor+1,7
  2231  01A7  29A9               	goto	u711
  2232  01A8  29AA               	goto	u710
  2233  01A9                     u711:
  2234  01A9  299B               	goto	l1758
  2235  01AA                     u710:
  2236  01AA                     l1764:
  2237  01AA  3001               	movlw	1
  2238  01AB                     u725:
  2239  01AB  1003               	clrc
  2240  01AC  0DC1               	rlf	___awdiv@quotient,f
  2241  01AD  0DC2               	rlf	___awdiv@quotient+1,f
  2242  01AE  3EFF               	addlw	-1
  2243  01AF  1D03               	skipz
  2244  01B0  29AB               	goto	u725
  2245  01B1  083C               	movf	___awdiv@divisor+1,w
  2246  01B2  023E               	subwf	___awdiv@dividend+1,w
  2247  01B3  1D03               	skipz
  2248  01B4  29B7               	goto	u735
  2249  01B5  083B               	movf	___awdiv@divisor,w
  2250  01B6  023D               	subwf	___awdiv@dividend,w
  2251  01B7                     u735:
  2252  01B7  1C03               	skipc
  2253  01B8  29BA               	goto	u731
  2254  01B9  29BB               	goto	u730
  2255  01BA                     u731:
  2256  01BA  29C2               	goto	l1770
  2257  01BB                     u730:
  2258  01BB                     l1766:
  2259  01BB  083B               	movf	___awdiv@divisor,w
  2260  01BC  02BD               	subwf	___awdiv@dividend,f
  2261  01BD  083C               	movf	___awdiv@divisor+1,w
  2262  01BE  1C03               	skipc
  2263  01BF  03BE               	decf	___awdiv@dividend+1,f
  2264  01C0  02BE               	subwf	___awdiv@dividend+1,f
  2265  01C1                     l1768:
  2266  01C1  1441               	bsf	___awdiv@quotient,0
  2267  01C2                     l1770:
  2268  01C2  3001               	movlw	1
  2269  01C3                     u745:
  2270  01C3  1003               	clrc
  2271  01C4  0CBC               	rrf	___awdiv@divisor+1,f
  2272  01C5  0CBB               	rrf	___awdiv@divisor,f
  2273  01C6  3EFF               	addlw	-1
  2274  01C7  1D03               	skipz
  2275  01C8  29C3               	goto	u745
  2276  01C9                     l1772:
  2277  01C9  3001               	movlw	1
  2278  01CA  02BF               	subwf	___awdiv@counter,f
  2279  01CB  1D03               	btfss	3,2
  2280  01CC  29CE               	goto	u751
  2281  01CD  29CF               	goto	u750
  2282  01CE                     u751:
  2283  01CE  29AA               	goto	l1764
  2284  01CF                     u750:
  2285  01CF                     l1774:
  2286  01CF  0840               	movf	___awdiv@sign,w
  2287  01D0  1903               	btfsc	3,2
  2288  01D1  29D3               	goto	u761
  2289  01D2  29D4               	goto	u760
  2290  01D3                     u761:
  2291  01D3  29D9               	goto	l1778
  2292  01D4                     u760:
  2293  01D4                     l1776:
  2294  01D4  09C1               	comf	___awdiv@quotient,f
  2295  01D5  09C2               	comf	___awdiv@quotient+1,f
  2296  01D6  0AC1               	incf	___awdiv@quotient,f
  2297  01D7  1903               	skipnz
  2298  01D8  0AC2               	incf	___awdiv@quotient+1,f
  2299  01D9                     l1778:
  2300  01D9  0842               	movf	___awdiv@quotient+1,w
  2301  01DA  00BC               	movwf	?___awdiv+1
  2302  01DB  0841               	movf	___awdiv@quotient,w
  2303  01DC  00BB               	movwf	?___awdiv
  2304  01DD                     l461:
  2305  01DD  0008               	return
  2306  01DE                     __end_of___awdiv:
  2307                           
  2308                           	psect	text10
  2309  00F2                     __ptext10:	
  2310 ;; *************** function _MensajeLCD *****************
  2311 ;; Defined at:
  2312 ;;		line 145 in file "LCDMain.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0
  2329 ;;      Totals:         0       0       0       0       0
  2330 ;;Total ram usage:        0 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; Hardware stack levels required when called: 4
  2333 ;; This function calls:
  2334 ;;		_LCD_Imprimir_Char
  2335 ;;		_LCD_Imprimir_Texto
  2336 ;;		_LCD_Set_Cursor
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _MensajeLCD
  2344  00F2                     _MensajeLCD:
  2345  00F2                     l1886:	
  2346                           ;incstack = 0
  2347                           ; Regs used in _MensajeLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2348                           
  2349                           
  2350                           ;LCDMain.c: 146:     LCD_Set_Cursor(0,0);
  2351  00F2  01F5               	clrf	LCD_Set_Cursor@b
  2352  00F3  3000               	movlw	0
  2353  00F4  120A  118A  2427  120A  118A  	fcall	_LCD_Set_Cursor
  2354                           
  2355                           ;LCDMain.c: 147:     LCD_Imprimir_Texto(Mensaje1);
  2356  00F9  3050               	movlw	(low (_Mensaje1| 0))& (0+255)
  2357  00FA  120A  118A  2454  120A  118A  	fcall	_LCD_Imprimir_Texto
  2358                           
  2359                           ;LCDMain.c: 148:     LCD_Set_Cursor(1,0);
  2360  00FF  01F5               	clrf	LCD_Set_Cursor@b
  2361  0100  3001               	movlw	1
  2362  0101  120A  118A  2427  120A  118A  	fcall	_LCD_Set_Cursor
  2363  0106                     l1888:
  2364                           
  2365                           ;LCDMain.c: 149:     LCD_Imprimir_Char(centenas0);
  2366  0106  0879               	movf	_centenas0,w
  2367  0107  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2368  010C                     l1890:
  2369                           
  2370                           ;LCDMain.c: 150:     LCD_Imprimir_Char('.');
  2371  010C  302E               	movlw	46
  2372  010D  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2373  0112                     l1892:
  2374                           
  2375                           ;LCDMain.c: 151:     LCD_Imprimir_Char(decenas0);
  2376  0112  0878               	movf	_decenas0,w
  2377  0113  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2378  0118                     l1894:
  2379                           
  2380                           ;LCDMain.c: 152:     LCD_Imprimir_Char(unidades0);
  2381  0118  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0119  1303               	bcf	3,6	;RP1=0, select bank0
  2383  011A  0828               	movf	_unidades0,w
  2384  011B  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2385  0120                     l1896:
  2386                           
  2387                           ;LCDMain.c: 153:     LCD_Imprimir_Char('v');
  2388  0120  3076               	movlw	118
  2389  0121  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2390  0126                     l1898:
  2391                           
  2392                           ;LCDMain.c: 154:     LCD_Imprimir_Char(' ');
  2393  0126  3020               	movlw	32
  2394  0127  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2395  012C                     l1900:
  2396                           
  2397                           ;LCDMain.c: 155:     LCD_Imprimir_Char(centenas1);
  2398  012C  1283               	bcf	3,5	;RP0=0, select bank0
  2399  012D  1303               	bcf	3,6	;RP1=0, select bank0
  2400  012E  0827               	movf	_centenas1,w
  2401  012F  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2402  0134                     l1902:
  2403                           
  2404                           ;LCDMain.c: 156:     LCD_Imprimir_Char('.');
  2405  0134  302E               	movlw	46
  2406  0135  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2407  013A                     l1904:
  2408                           
  2409                           ;LCDMain.c: 157:     LCD_Imprimir_Char(decenas1);
  2410  013A  1283               	bcf	3,5	;RP0=0, select bank0
  2411  013B  1303               	bcf	3,6	;RP1=0, select bank0
  2412  013C  0826               	movf	_decenas1,w
  2413  013D  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2414  0142                     l1906:
  2415                           
  2416                           ;LCDMain.c: 158:     LCD_Imprimir_Char(unidades1);
  2417  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0144  0825               	movf	_unidades1,w
  2420  0145  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2421  014A                     l1908:
  2422                           
  2423                           ;LCDMain.c: 159:     LCD_Imprimir_Char('v');
  2424  014A  3076               	movlw	118
  2425  014B  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2426  0150                     l1910:
  2427                           
  2428                           ;LCDMain.c: 160:     LCD_Imprimir_Char(' ');
  2429  0150  3020               	movlw	32
  2430  0151  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2431  0156                     l1912:
  2432                           
  2433                           ;LCDMain.c: 161:     LCD_Imprimir_Char(' ');
  2434  0156  3020               	movlw	32
  2435  0157  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2436  015C                     l1914:
  2437                           
  2438                           ;LCDMain.c: 162:     LCD_Imprimir_Char(centenas2);
  2439  015C  1283               	bcf	3,5	;RP0=0, select bank0
  2440  015D  1303               	bcf	3,6	;RP1=0, select bank0
  2441  015E  0824               	movf	_centenas2,w
  2442  015F  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2443  0164                     l1916:
  2444                           
  2445                           ;LCDMain.c: 163:     LCD_Imprimir_Char(decenas2);
  2446  0164  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0165  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0166  0823               	movf	_decenas2,w
  2449  0167  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2450  016C                     l1918:
  2451                           
  2452                           ;LCDMain.c: 164:     LCD_Imprimir_Char(unidades2);
  2453  016C  1283               	bcf	3,5	;RP0=0, select bank0
  2454  016D  1303               	bcf	3,6	;RP1=0, select bank0
  2455  016E  0822               	movf	_unidades2,w
  2456  016F  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2457  0174                     l144:
  2458  0174  0008               	return
  2459  0175                     __end_of_MensajeLCD:
  2460                           
  2461                           	psect	text11
  2462  0427                     __ptext11:	
  2463 ;; *************** function _LCD_Set_Cursor *****************
  2464 ;; Defined at:
  2465 ;;		line 66 in file "LCD.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  a               1    wreg     unsigned char 
  2468 ;;  b               1    5[COMMON] unsigned char 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  a               1    0[BANK0 ] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         1       0       0       0       0
  2481 ;;      Locals:         0       1       0       0       0
  2482 ;;      Temps:          2       0       0       0       0
  2483 ;;      Totals:         3       1       0       0       0
  2484 ;;Total ram usage:        4 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 3
  2487 ;; This function calls:
  2488 ;;		_LCD_Instruccion
  2489 ;; This function is called by:
  2490 ;;		_MensajeLCD
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function _LCD_Set_Cursor
  2496  0427                     _LCD_Set_Cursor:
  2497                           
  2498                           ;incstack = 0
  2499                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2500                           ;LCD_Set_Cursor@a stored from wreg
  2501  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0429  00B9               	movwf	LCD_Set_Cursor@a
  2504  042A                     l1824:
  2505                           
  2506                           ;LCD.c: 68:     switch(a){
  2507  042A  2C43               	goto	l1834
  2508  042B                     l1826:
  2509                           
  2510                           ;LCD.c: 72:             LCD_Instruccion(0b10000000 + b);
  2511  042B  0875               	movf	LCD_Set_Cursor@b,w
  2512  042C  3E80               	addlw	128
  2513  042D  120A  118A  2534  120A  118A  	fcall	_LCD_Instruccion
  2514                           
  2515                           ;LCD.c: 73:             break;
  2516  0432  2C53               	goto	l209
  2517  0433                     l1828:
  2518                           
  2519                           ;LCD.c: 76:             LCD_Instruccion(0b11000000 + b);
  2520  0433  0875               	movf	LCD_Set_Cursor@b,w
  2521  0434  3EC0               	addlw	192
  2522  0435  120A  118A  2534  120A  118A  	fcall	_LCD_Instruccion
  2523                           
  2524                           ;LCD.c: 77:             break;
  2525  043A  2C53               	goto	l209
  2526  043B                     l1830:
  2527                           
  2528                           ;LCD.c: 79:             LCD_Instruccion(0b10000000 + b);
  2529  043B  0875               	movf	LCD_Set_Cursor@b,w
  2530  043C  3E80               	addlw	128
  2531  043D  120A  118A  2534  120A  118A  	fcall	_LCD_Instruccion
  2532                           
  2533                           ;LCD.c: 80:             break;
  2534  0442  2C53               	goto	l209
  2535  0443                     l1834:
  2536  0443  0839               	movf	LCD_Set_Cursor@a,w
  2537  0444  00F6               	movwf	??_LCD_Set_Cursor
  2538  0445  01F7               	clrf	??_LCD_Set_Cursor+1
  2539                           
  2540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2541                           ; Switch size 1, requested type "simple"
  2542                           ; Number of cases is 1, Range of values is 0 to 0
  2543                           ; switch strategies available:
  2544                           ; Name         Instructions Cycles
  2545                           ; simple_byte            4     3 (average)
  2546                           ; direct_byte           11     8 (fixed)
  2547                           ; jumptable            260     6 (fixed)
  2548                           ;	Chosen strategy is simple_byte
  2549  0446  0877               	movf	??_LCD_Set_Cursor+1,w
  2550  0447  3A00               	xorlw	0	; case 0
  2551  0448  1903               	skipnz
  2552  0449  2C4B               	goto	l1982
  2553  044A  2C3B               	goto	l1830
  2554  044B                     l1982:
  2555                           
  2556                           ; Switch size 1, requested type "simple"
  2557                           ; Number of cases is 2, Range of values is 0 to 1
  2558                           ; switch strategies available:
  2559                           ; Name         Instructions Cycles
  2560                           ; simple_byte            7     4 (average)
  2561                           ; direct_byte           14     8 (fixed)
  2562                           ; jumptable            260     6 (fixed)
  2563                           ;	Chosen strategy is simple_byte
  2564  044B  0876               	movf	??_LCD_Set_Cursor,w
  2565  044C  3A00               	xorlw	0	; case 0
  2566  044D  1903               	skipnz
  2567  044E  2C2B               	goto	l1826
  2568  044F  3A01               	xorlw	1	; case 1
  2569  0450  1903               	skipnz
  2570  0451  2C33               	goto	l1828
  2571  0452  2C3B               	goto	l1830
  2572  0453                     l209:
  2573  0453  0008               	return
  2574  0454                     __end_of_LCD_Set_Cursor:
  2575                           
  2576                           	psect	text12
  2577  0454                     __ptext12:	
  2578 ;; *************** function _LCD_Imprimir_Texto *****************
  2579 ;; Defined at:
  2580 ;;		line 44 in file "LCD.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  a               1    wreg     PTR unsigned char 
  2583 ;;		 -> Mensaje1(18), 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2586 ;;		 -> Mensaje1(18), 
  2587 ;;  i               1    3[BANK0 ] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      void 
  2590 ;; Registers used:
  2591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2597 ;;      Params:         0       0       0       0       0
  2598 ;;      Locals:         0       2       0       0       0
  2599 ;;      Temps:          0       2       0       0       0
  2600 ;;      Totals:         0       4       0       0       0
  2601 ;;Total ram usage:        4 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; Hardware stack levels required when called: 3
  2604 ;; This function calls:
  2605 ;;		_LCD_Imprimir_Char
  2606 ;;		_strlen
  2607 ;; This function is called by:
  2608 ;;		_MensajeLCD
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _LCD_Imprimir_Texto
  2614  0454                     _LCD_Imprimir_Texto:
  2615                           
  2616                           ;incstack = 0
  2617                           ; Regs used in _LCD_Imprimir_Texto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2618                           ;LCD_Imprimir_Texto@a stored from wreg
  2619  0454  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0455  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0456  00BB               	movwf	LCD_Imprimir_Texto@a
  2622  0457                     l1842:
  2623                           
  2624                           ;LCD.c: 45:     uint8_t i;;LCD.c: 46:     for (i = 0; i < strlen(a); i++){
  2625  0457  01BC               	clrf	LCD_Imprimir_Texto@i
  2626  0458  2C6B               	goto	l1848
  2627  0459                     l1844:
  2628                           
  2629                           ;LCD.c: 47:         LCD_Imprimir_Char(a[i]);
  2630  0459  083C               	movf	LCD_Imprimir_Texto@i,w
  2631  045A  073B               	addwf	LCD_Imprimir_Texto@a,w
  2632  045B  00B9               	movwf	??_LCD_Imprimir_Texto
  2633  045C  0839               	movf	??_LCD_Imprimir_Texto,w
  2634  045D  0084               	movwf	4
  2635  045E  1383               	bcf	3,7	;select IRP bank0
  2636  045F  0800               	movf	0,w
  2637  0460  120A  118A  2528  120A  118A  	fcall	_LCD_Imprimir_Char
  2638  0465                     l1846:
  2639                           
  2640                           ;LCD.c: 48:     }
  2641  0465  3001               	movlw	1
  2642  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2643  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2644  0468  00B9               	movwf	??_LCD_Imprimir_Texto
  2645  0469  0839               	movf	??_LCD_Imprimir_Texto,w
  2646  046A  07BC               	addwf	LCD_Imprimir_Texto@i,f
  2647  046B                     l1848:
  2648  046B  083B               	movf	LCD_Imprimir_Texto@a,w
  2649  046C  120A  118A  24EA  120A  118A  	fcall	_strlen
  2650  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0473  083C               	movf	LCD_Imprimir_Texto@i,w
  2653  0474  00B9               	movwf	??_LCD_Imprimir_Texto
  2654  0475  01BA               	clrf	??_LCD_Imprimir_Texto+1
  2655  0476  0874               	movf	?_strlen+1,w
  2656  0477  023A               	subwf	??_LCD_Imprimir_Texto+1,w
  2657  0478  1D03               	skipz
  2658  0479  2C7C               	goto	u865
  2659  047A  0873               	movf	?_strlen,w
  2660  047B  0239               	subwf	??_LCD_Imprimir_Texto,w
  2661  047C                     u865:
  2662  047C  1C03               	skipc
  2663  047D  2C7F               	goto	u861
  2664  047E  2C80               	goto	u860
  2665  047F                     u861:
  2666  047F  2C59               	goto	l1844
  2667  0480                     u860:
  2668  0480                     l198:
  2669  0480  0008               	return
  2670  0481                     __end_of_LCD_Imprimir_Texto:
  2671                           
  2672                           	psect	text13
  2673  04EA                     __ptext13:	
  2674 ;; *************** function _strlen *****************
  2675 ;; Defined at:
  2676 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  s               1    wreg     PTR const unsigned char 
  2679 ;;		 -> Mensaje1(18), 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  s               1    6[COMMON] PTR const unsigned char 
  2682 ;;		 -> Mensaje1(18), 
  2683 ;;  cp              1    7[COMMON] PTR const unsigned char 
  2684 ;;		 -> Mensaje1(18), 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  2    3[COMMON] unsigned int 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2694 ;;      Params:         2       0       0       0       0
  2695 ;;      Locals:         2       0       0       0       0
  2696 ;;      Temps:          1       0       0       0       0
  2697 ;;      Totals:         5       0       0       0       0
  2698 ;;Total ram usage:        5 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_LCD_Imprimir_Texto
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _strlen
  2710  04EA                     _strlen:
  2711                           
  2712                           ;incstack = 0
  2713                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  2714                           ;strlen@s stored from wreg
  2715  04EA  00F6               	movwf	strlen@s
  2716  04EB                     l1290:
  2717  04EB  0876               	movf	strlen@s,w
  2718  04EC  00F5               	movwf	??_strlen
  2719  04ED  0875               	movf	??_strlen,w
  2720  04EE  00F7               	movwf	strlen@cp
  2721  04EF  2CF4               	goto	l1294
  2722  04F0                     l1292:
  2723  04F0  3001               	movlw	1
  2724  04F1  00F5               	movwf	??_strlen
  2725  04F2  0875               	movf	??_strlen,w
  2726  04F3  07F7               	addwf	strlen@cp,f
  2727  04F4                     l1294:
  2728  04F4  0877               	movf	strlen@cp,w
  2729  04F5  0084               	movwf	4
  2730  04F6  1383               	bcf	3,7	;select IRP bank0
  2731  04F7  0800               	movf	0,w
  2732  04F8  1D03               	btfss	3,2
  2733  04F9  2CFB               	goto	u331
  2734  04FA  2CFC               	goto	u330
  2735  04FB                     u331:
  2736  04FB  2CF0               	goto	l1292
  2737  04FC                     u330:
  2738  04FC                     l1296:
  2739  04FC  0876               	movf	strlen@s,w
  2740  04FD  0277               	subwf	strlen@cp,w
  2741  04FE  00F3               	movwf	?_strlen
  2742  04FF  01F4               	clrf	?_strlen+1
  2743  0500  1BF3               	btfsc	?_strlen,7
  2744  0501  03F4               	decf	?_strlen+1,f
  2745  0502                     l762:
  2746  0502  0008               	return
  2747  0503                     __end_of_strlen:
  2748                           
  2749                           	psect	text14
  2750  0528                     __ptext14:	
  2751 ;; *************** function _LCD_Imprimir_Char *****************
  2752 ;; Defined at:
  2753 ;;		line 36 in file "LCD.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  Comando         1    wreg     unsigned char 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  Comando         1    4[COMMON] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, pclath, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         0       0       0       0       0
  2768 ;;      Locals:         1       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0
  2770 ;;      Totals:         1       0       0       0       0
  2771 ;;Total ram usage:        1 bytes
  2772 ;; Hardware stack levels used: 1
  2773 ;; Hardware stack levels required when called: 2
  2774 ;; This function calls:
  2775 ;;		_LCD_Clock_I
  2776 ;; This function is called by:
  2777 ;;		_MensajeLCD
  2778 ;;		_LCD_Imprimir_Texto
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _LCD_Imprimir_Char
  2784  0528                     _LCD_Imprimir_Char:
  2785                           
  2786                           ;incstack = 0
  2787                           ; Regs used in _LCD_Imprimir_Char: [wreg+status,2+status,0+pclath+cstack]
  2788                           ;LCD_Imprimir_Char@Comando stored from wreg
  2789  0528  00F4               	movwf	LCD_Imprimir_Char@Comando
  2790  0529                     l1708:
  2791                           
  2792                           ;LCD.c: 37:     PORTEbits.RE0 = 1;
  2793  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2794  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2795  052B  1409               	bsf	9,0	;volatile
  2796  052C                     l1710:
  2797                           
  2798                           ;LCD.c: 38:     PORTA = Comando;
  2799  052C  0874               	movf	LCD_Imprimir_Char@Comando,w
  2800  052D  0085               	movwf	5	;volatile
  2801  052E                     l1712:
  2802                           
  2803                           ;LCD.c: 39:     LCD_Clock_I();
  2804  052E  120A  118A  2540  120A  118A  	fcall	_LCD_Clock_I
  2805  0533                     l192:
  2806  0533  0008               	return
  2807  0534                     __end_of_LCD_Imprimir_Char:
  2808                           
  2809                           	psect	text15
  2810  02EB                     __ptext15:	
  2811 ;; *************** function _LCD_Inicar *****************
  2812 ;; Defined at:
  2813 ;;		line 3 in file "LCD.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0, pclath, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0
  2829 ;;      Temps:          2       0       0       0       0
  2830 ;;      Totals:         2       0       0       0       0
  2831 ;;Total ram usage:        2 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 3
  2834 ;; This function calls:
  2835 ;;		_LCD_Instruccion
  2836 ;; This function is called by:
  2837 ;;		_main
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           
  2842                           ;psect for function _LCD_Inicar
  2843  02EB                     _LCD_Inicar:
  2844  02EB                     l1860:	
  2845                           ;incstack = 0
  2846                           ; Regs used in _LCD_Inicar: [wreg+status,2+status,0+pclath+cstack]
  2847                           
  2848                           
  2849                           ;LCD.c: 4:     PORTBbits.RB7 = 0;
  2850  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2851  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2852  02ED  1386               	bcf	6,7	;volatile
  2853                           
  2854                           ;LCD.c: 5:     PORTEbits.RE0 = 0;
  2855  02EE  1009               	bcf	9,0	;volatile
  2856  02EF                     l1862:
  2857                           
  2858                           ;LCD.c: 6:     PORTA = 0;
  2859  02EF  0185               	clrf	5	;volatile
  2860  02F0                     l1864:
  2861                           
  2862                           ;LCD.c: 9:     _delay((unsigned long)((16)*(1000000/4000.0)));
  2863  02F0  3006               	movlw	6
  2864  02F1  00F6               	movwf	??_LCD_Inicar+1
  2865  02F2  3030               	movlw	48
  2866  02F3  00F5               	movwf	??_LCD_Inicar
  2867  02F4                     u887:
  2868  02F4  0BF5               	decfsz	??_LCD_Inicar,f
  2869  02F5  2AF4               	goto	u887
  2870  02F6  0BF6               	decfsz	??_LCD_Inicar+1,f
  2871  02F7  2AF4               	goto	u887
  2872  02F8  0000               	nop
  2873  02F9                     l1866:
  2874                           
  2875                           ;LCD.c: 10:     LCD_Instruccion(0b00110000);
  2876  02F9  3030               	movlw	48
  2877  02FA  120A  118A  2534  120A  118A  	fcall	_LCD_Instruccion
  2878  02FF                     l1868:
  2879                           
  2880                           ;LCD.c: 11:     _delay((unsigned long)((5)*(1000000/4000.0)));
  2881  02FF  30F9               	movlw	249
  2882  0300  00F5               	movwf	??_LCD_Inicar
  2883  0301                     u897:
  2884  0301  2B02               	nop2
  2885  0302  0BF5               	decfsz	??_LCD_Inicar,f
  2886  0303  2B01               	goto	u897
  2887  0304  2B05               	nop2
  2888  0305  2B06               	nop2
  2889  0306                     l1870:
  2890                           
  2891                           ;LCD.c: 12:     LCD_Instruccion (0b00110000);
  2892  0306  3030               	movlw	48
  2893  0307  120A  118A  2534  120A  118A  	fcall	_LCD_Instruccion
  2894  030C                     l1872:
  2895                           
  2896                           ;LCD.c: 13:     _delay((unsigned long)((200)*(1000000/4000000.0)));
  2897  030C  3010               	movlw	16
  2898  030D  00F5               	movwf	??_LCD_Inicar
  2899  030E                     u907:
  2900  030E  0BF5               	decfsz	??_LCD_Inicar,f
  2901  030F  2B0E               	goto	u907
  2902  0310  0000               	nop
  2903  0311                     l1874:
  2904                           
  2905                           ;LCD.c: 14:     LCD_Instruccion (0b00110000);
  2906  0311  3030               	movlw	48
  2907  0312  120A  118A  2534  120A  118A  	fcall	_LCD_Instruccion
  2908  0317                     l1876:
  2909                           
  2910                           ;LCD.c: 17:     _delay((unsigned long)((100)*(1000000/4000.0)));
  2911  0317  3021               	movlw	33
  2912  0318  00F6               	movwf	??_LCD_Inicar+1
  2913  0319  3076               	movlw	118
  2914  031A  00F5               	movwf	??_LCD_Inicar
  2915  031B                     u917:
  2916  031B  0BF5               	decfsz	??_LCD_Inicar,f
  2917  031C  2B1B               	goto	u917
  2918  031D  0BF6               	decfsz	??_LCD_Inicar+1,f
  2919  031E  2B1B               	goto	u917
  2920  031F  0000               	nop
  2921  0320                     l1878:
  2922                           
  2923                           ;LCD.c: 18:     LCD_Instruccion(0b00111000);
  2924  0320  3038               	movlw	56
  2925  0321  120A  118A  2534  120A  118A  	fcall	_LCD_Instruccion
  2926  0326                     l1880:
  2927                           
  2928                           ;LCD.c: 19:     _delay((unsigned long)((100)*(1000000/4000.0)));
  2929  0326  3021               	movlw	33
  2930  0327  00F6               	movwf	??_LCD_Inicar+1
  2931  0328  3076               	movlw	118
  2932  0329  00F5               	movwf	??_LCD_Inicar
  2933  032A                     u927:
  2934  032A  0BF5               	decfsz	??_LCD_Inicar,f
  2935  032B  2B2A               	goto	u927
  2936  032C  0BF6               	decfsz	??_LCD_Inicar+1,f
  2937  032D  2B2A               	goto	u927
  2938  032E  0000               	nop
  2939  032F                     l1882:
  2940                           
  2941                           ;LCD.c: 20:     LCD_Instruccion(0b00001100);
  2942  032F  300C               	movlw	12
  2943  0330  120A  118A  2534  120A  118A  	fcall	_LCD_Instruccion
  2944  0335                     l186:
  2945  0335  0008               	return
  2946  0336                     __end_of_LCD_Inicar:
  2947                           
  2948                           	psect	text16
  2949  0534                     __ptext16:	
  2950 ;; *************** function _LCD_Instruccion *****************
  2951 ;; Defined at:
  2952 ;;		line 29 in file "LCD.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  Comando         1    wreg     unsigned char 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  Comando         1    4[COMMON] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         1       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0
  2969 ;;      Totals:         1       0       0       0       0
  2970 ;;Total ram usage:        1 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 2
  2973 ;; This function calls:
  2974 ;;		_LCD_Clock_I
  2975 ;; This function is called by:
  2976 ;;		_LCD_Inicar
  2977 ;;		_LCD_Set_Cursor
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _LCD_Instruccion
  2983  0534                     _LCD_Instruccion:
  2984                           
  2985                           ;incstack = 0
  2986                           ; Regs used in _LCD_Instruccion: [wreg+status,2+status,0+pclath+cstack]
  2987                           ;LCD_Instruccion@Comando stored from wreg
  2988  0534  00F4               	movwf	LCD_Instruccion@Comando
  2989  0535                     l1716:
  2990                           
  2991                           ;LCD.c: 30:     PORTEbits.RE0 = 0;
  2992  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2993  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2994  0537  1009               	bcf	9,0	;volatile
  2995  0538                     l1718:
  2996                           
  2997                           ;LCD.c: 31:     PORTA = Comando;
  2998  0538  0874               	movf	LCD_Instruccion@Comando,w
  2999  0539  0085               	movwf	5	;volatile
  3000  053A                     l1720:
  3001                           
  3002                           ;LCD.c: 32:     LCD_Clock_I();
  3003  053A  120A  118A  2540  120A  118A  	fcall	_LCD_Clock_I
  3004  053F                     l189:
  3005  053F  0008               	return
  3006  0540                     __end_of_LCD_Instruccion:
  3007                           
  3008                           	psect	text17
  3009  0540                     __ptext17:	
  3010 ;; *************** function _LCD_Clock_I *****************
  3011 ;; Defined at:
  3012 ;;		line 52 in file "LCD.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3026 ;;      Params:         0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0
  3028 ;;      Temps:          1       0       0       0       0
  3029 ;;      Totals:         1       0       0       0       0
  3030 ;;Total ram usage:        1 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_LCD_Instruccion
  3037 ;;		_LCD_Imprimir_Char
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function _LCD_Clock_I
  3043  0540                     _LCD_Clock_I:
  3044  0540                     l1700:	
  3045                           ;incstack = 0
  3046                           ; Regs used in _LCD_Clock_I: [wreg]
  3047                           
  3048                           
  3049                           ;LCD.c: 53:     PORTBbits.RB7 = 1;
  3050  0540  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0541  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0542  1786               	bsf	6,7	;volatile
  3053  0543                     l1702:
  3054                           
  3055                           ;LCD.c: 54:     _delay((unsigned long)((0.5)*(1000000/4000.0)));
  3056  0543  3029               	movlw	41
  3057  0544  00F3               	movwf	??_LCD_Clock_I
  3058  0545                     u937:
  3059  0545  0BF3               	decfsz	??_LCD_Clock_I,f
  3060  0546  2D45               	goto	u937
  3061  0547  0000               	nop
  3062  0548                     l1704:
  3063                           
  3064                           ;LCD.c: 55:     PORTBbits.RB7 = 0;
  3065  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3067  054A  1386               	bcf	6,7	;volatile
  3068  054B                     l201:
  3069  054B  0008               	return
  3070  054C                     __end_of_LCD_Clock_I:
  3071                           
  3072                           	psect	text18
  3073  04AC                     __ptext18:	
  3074 ;; *************** function _CambioCanalADC *****************
  3075 ;; Defined at:
  3076 ;;		line 128 in file "LCDMain.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0
  3092 ;;      Temps:          1       0       0       0       0
  3093 ;;      Totals:         1       0       0       0       0
  3094 ;;Total ram usage:        1 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_main
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           
  3105                           ;psect for function _CambioCanalADC
  3106  04AC                     _CambioCanalADC:
  3107  04AC                     l1184:	
  3108                           ;incstack = 0
  3109                           ; Regs used in _CambioCanalADC: [wreg+status,2+status,0]
  3110                           
  3111                           
  3112                           ;LCDMain.c: 129:     if (ADCON0bits.GO == 0){
  3113  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  3114  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  3115  04AE  189F               	btfsc	31,1	;volatile
  3116  04AF  2CB1               	goto	u261
  3117  04B0  2CB2               	goto	u260
  3118  04B1                     u261:
  3119  04B1  2CCC               	goto	l138
  3120  04B2                     u260:
  3121  04B2                     l1186:
  3122                           
  3123                           ;LCDMain.c: 130:             if(ADCON0bits.CHS == 11)
  3124  04B2  0C1F               	rrf	31,w	;volatile
  3125  04B3  00F3               	movwf	??_CambioCanalADC
  3126  04B4  0C73               	rrf	??_CambioCanalADC,w
  3127  04B5  390F               	andlw	15
  3128  04B6  3A0B               	xorlw	11
  3129  04B7  1D03               	skipz
  3130  04B8  2CBA               	goto	u271
  3131  04B9  2CBB               	goto	u270
  3132  04BA                     u271:
  3133  04BA  2CC0               	goto	l1190
  3134  04BB                     u270:
  3135  04BB                     l1188:
  3136                           
  3137                           ;LCDMain.c: 131:                 ADCON0bits.CHS = 13;
  3138  04BB  081F               	movf	31,w	;volatile
  3139  04BC  39C3               	andlw	-61
  3140  04BD  3834               	iorlw	52
  3141  04BE  009F               	movwf	31	;volatile
  3142  04BF  2CC4               	goto	l1192
  3143  04C0                     l1190:
  3144                           
  3145                           ;LCDMain.c: 133:                 ADCON0bits.CHS = 11;
  3146  04C0  081F               	movf	31,w	;volatile
  3147  04C1  39C3               	andlw	-61
  3148  04C2  382C               	iorlw	44
  3149  04C3  009F               	movwf	31	;volatile
  3150  04C4                     l1192:
  3151                           
  3152                           ;LCDMain.c: 135:             _delay((unsigned long)((50)*(1000000/4000000.0)));
  3153  04C4  3003               	movlw	3
  3154  04C5  00F3               	movwf	??_CambioCanalADC
  3155  04C6                     u947:
  3156  04C6  0BF3               	decfsz	??_CambioCanalADC,f
  3157  04C7  2CC6               	goto	u947
  3158  04C8  2CC9               	nop2
  3159  04C9                     l1194:
  3160                           
  3161                           ;LCDMain.c: 136:             ADCON0bits.GO = 1;
  3162  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3163  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  3164  04CB  149F               	bsf	31,1	;volatile
  3165  04CC                     l138:
  3166  04CC  0008               	return
  3167  04CD                     __end_of_CambioCanalADC:
  3168                           
  3169                           	psect	text19
  3170  03BD                     __ptext19:	
  3171 ;; *************** function _isr *****************
  3172 ;; Defined at:
  3173 ;;		line 80 in file "LCDMain.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2, status,0
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3187 ;;      Params:         0       0       0       0       0
  3188 ;;      Locals:         0       0       0       0       0
  3189 ;;      Temps:          3       0       0       0       0
  3190 ;;      Totals:         3       0       0       0       0
  3191 ;;Total ram usage:        3 bytes
  3192 ;; Hardware stack levels used: 1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		Interrupt level 1
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _isr
  3202  03BD                     _isr:
  3203  03BD                     i1l1634:
  3204                           
  3205                           ;LCDMain.c: 82:     if(PIR1bits.ADIF){
  3206  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  3207  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  3208  03BF  1F0C               	btfss	12,6	;volatile
  3209  03C0  2BC2               	goto	u58_21
  3210  03C1  2BC3               	goto	u58_20
  3211  03C2                     u58_21:
  3212  03C2  2BD7               	goto	i1l115
  3213  03C3                     u58_20:
  3214  03C3                     i1l1636:
  3215                           
  3216                           ;LCDMain.c: 83:         if(ADCON0bits.CHS == 11)
  3217  03C3  0C1F               	rrf	31,w	;volatile
  3218  03C4  00F0               	movwf	??_isr
  3219  03C5  0C70               	rrf	??_isr,w
  3220  03C6  390F               	andlw	15
  3221  03C7  3A0B               	xorlw	11
  3222  03C8  1D03               	skipz
  3223  03C9  2BCB               	goto	u59_21
  3224  03CA  2BCC               	goto	u59_20
  3225  03CB                     u59_21:
  3226  03CB  2BD1               	goto	i1l1640
  3227  03CC                     u59_20:
  3228  03CC                     i1l1638:
  3229                           
  3230                           ;LCDMain.c: 84:             S0 = ADRESH;
  3231  03CC  081E               	movf	30,w	;volatile
  3232  03CD  00F0               	movwf	??_isr
  3233  03CE  0870               	movf	??_isr,w
  3234  03CF  00AB               	movwf	_S0
  3235  03D0  2BD5               	goto	i1l1642
  3236  03D1                     i1l1640:
  3237                           
  3238                           ;LCDMain.c: 86:             S1 = ADRESH;
  3239  03D1  081E               	movf	30,w	;volatile
  3240  03D2  00F0               	movwf	??_isr
  3241  03D3  0870               	movf	??_isr,w
  3242  03D4  00AA               	movwf	_S1
  3243  03D5                     i1l1642:
  3244                           
  3245                           ;LCDMain.c: 87:         PIR1bits.ADIF = 0;
  3246  03D5  130C               	bcf	12,6	;volatile
  3247                           
  3248                           ;LCDMain.c: 88:     }
  3249  03D6  2BF3               	goto	i1l124
  3250  03D7                     i1l115:	
  3251                           ;LCDMain.c: 90:     else if(PIR1bits.RCIF){
  3252                           
  3253  03D7  1E8C               	btfss	12,5	;volatile
  3254  03D8  2BDA               	goto	u60_21
  3255  03D9  2BDB               	goto	u60_20
  3256  03DA                     u60_21:
  3257  03DA  2BF3               	goto	i1l124
  3258  03DB                     u60_20:
  3259  03DB                     i1l1644:
  3260                           
  3261                           ;LCDMain.c: 91:         portEs = RCREG;
  3262  03DB  081A               	movf	26,w	;volatile
  3263  03DC  00F0               	movwf	??_isr
  3264  03DD  0870               	movf	??_isr,w
  3265  03DE  00FA               	movwf	_portEs
  3266  03DF                     i1l1646:
  3267                           
  3268                           ;LCDMain.c: 93:             S2 = S2++;
  3269  03DF  302B               	movlw	43
  3270  03E0  067A               	xorwf	_portEs,w
  3271  03E1  1D03               	btfss	3,2
  3272  03E2  2BE4               	goto	u61_21
  3273  03E3  2BE5               	goto	u61_20
  3274  03E4                     u61_21:
  3275  03E4  2BEA               	goto	i1l1650
  3276  03E5                     u61_20:
  3277  03E5                     i1l1648:
  3278  03E5  3001               	movlw	1
  3279  03E6  00F0               	movwf	??_isr
  3280  03E7  0870               	movf	??_isr,w
  3281  03E8  07A9               	addwf	_S2,f
  3282                           
  3283                           ;LCDMain.c: 94:         }
  3284  03E9  2BF3               	goto	i1l124
  3285  03EA                     i1l1650:
  3286                           
  3287                           ;LCDMain.c: 96:             S2 = S2--;
  3288  03EA  302D               	movlw	45
  3289  03EB  067A               	xorwf	_portEs,w
  3290  03EC  1D03               	btfss	3,2
  3291  03ED  2BEF               	goto	u62_21
  3292  03EE  2BF0               	goto	u62_20
  3293  03EF                     u62_21:
  3294  03EF  2BF3               	goto	i1l119
  3295  03F0                     u62_20:
  3296  03F0                     i1l1652:
  3297  03F0  3001               	movlw	1
  3298  03F1  02A9               	subwf	_S2,f
  3299                           
  3300                           ;LCDMain.c: 97:         }
  3301  03F2  2BF3               	goto	i1l124
  3302  03F3                     i1l119:	
  3303                           ;LCDMain.c: 101:     }
  3304                           
  3305  03F3                     i1l124:
  3306  03F3  0872               	movf	??_isr+2,w
  3307  03F4  008A               	movwf	10
  3308  03F5  0E71               	swapf	??_isr+1,w
  3309  03F6  0083               	movwf	3
  3310  03F7  0EFE               	swapf	btemp,f
  3311  03F8  0E7E               	swapf	btemp,w
  3312  03F9  0009               	retfie
  3313  03FA                     __end_of_isr:
  3314  007E                     btemp	set	126	;btemp
  3315  007E                     wtemp0	set	126
  3316                           
  3317                           	psect	intentry
  3318  0004                     __pintentry:	
  3319                           ;incstack = 0
  3320                           ; Regs used in _isr: [wreg+status,2+status,0]
  3321                           
  3322  0004                     interrupt_function:
  3323  007E                     saved_w	set	btemp
  3324  0004  00FE               	movwf	btemp
  3325  0005  0E03               	swapf	3,w
  3326  0006  00F1               	movwf	??_isr+1
  3327  0007  080A               	movf	10,w
  3328  0008  00F2               	movwf	??_isr+2
  3329  0009  120A  118A  2BBD   	ljmp	_isr
  3330                           
  3331                           	psect	config
  3332                           
  3333                           ;Config register CONFIG1 @ 0x2007
  3334                           ;	Oscillator Selection bits
  3335                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3336                           ;	Watchdog Timer Enable bit
  3337                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3338                           ;	Power-up Timer Enable bit
  3339                           ;	PWRTE = OFF, PWRT disabled
  3340                           ;	RE3/MCLR pin function select bit
  3341                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3342                           ;	Code Protection bit
  3343                           ;	CP = OFF, Program memory code protection is disabled
  3344                           ;	Data Code Protection bit
  3345                           ;	CPD = OFF, Data memory code protection is disabled
  3346                           ;	Brown Out Reset Selection bits
  3347                           ;	BOREN = OFF, BOR disabled
  3348                           ;	Internal External Switchover bit
  3349                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3350                           ;	Fail-Safe Clock Monitor Enabled bit
  3351                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3352                           ;	Low Voltage Programming Enable bit
  3353                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3354                           ;	In-Circuit Debugger Mode bit
  3355                           ;	DEBUG = 0x1, unprogrammed default
  3356  2007                     	org	8199
  3357  2007  20D4               	dw	8404
  3358                           
  3359                           ;Config register CONFIG2 @ 0x2008
  3360                           ;	Brown-out Reset Selection bit
  3361                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3362                           ;	Flash Program Memory Self Write Enable bits
  3363                           ;	WRT = OFF, Write protection off
  3364  2008                     	org	8200
  3365  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     23      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 18
		 -> Mensaje1(BANK0[18]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 18
		 -> Mensaje1(BANK0[18]), 

    LCD_Imprimir_Texto@a	PTR unsigned char  size(1) Largest target is 18
		 -> Mensaje1(BANK0[18]), 

    divisor@centena	PTR unsigned char  size(1) Largest target is 1
		 -> S2DC(BANK0[1]), S1DC(BANK0[1]), S0DC(BANK0[1]), 

    divisor@decena	PTR unsigned char  size(1) Largest target is 1
		 -> S2DD(BANK0[1]), S1DD(BANK0[1]), S0DD(BANK0[1]), 

    divisor@unidades	PTR unsigned char  size(1) Largest target is 1
		 -> S2DU(BANK0[1]), S1DU(BANK0[1]), S0DU(BANK0[1]), 

    Map255a500@b	PTR int  size(1) Largest target is 2
		 -> S1D(BANK0[2]), S0D(BANK0[2]), 


Critical Paths under _main in COMMON

    _setup->_EUSART_C
    _divisor->___awdiv
    _divisor->___awmod
    _Map255a500->___awdiv
    ___awdiv->___wmul
    _MensajeLCD->_LCD_Set_Cursor
    _LCD_Set_Cursor->_LCD_Instruccion
    _LCD_Imprimir_Texto->_strlen
    _LCD_Imprimir_Char->_LCD_Clock_I
    _LCD_Inicar->_LCD_Instruccion
    _LCD_Instruccion->_LCD_Clock_I

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ValoresDisplay
    _setup->_EUSART_C
    _ValoresDisplay->_divisor
    _divisor->___awdiv
    _Map255a500->___awdiv
    ___awdiv->___wmul
    _MensajeLCD->_LCD_Imprimir_Texto

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6264
                     _CambioCanalADC
                         _LCD_Inicar
                         _MensajeLCD
                     _ValoresDisplay
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     904
                                              4 COMMON     1     1      0
                           _EUSART_C
 ---------------------------------------------------------------------------------
 (2) _EUSART_C                                            10     1      9     904
                                              3 COMMON     1     1      0
                                              0 BANK0      9     0      9
 ---------------------------------------------------------------------------------
 (1) _ValoresDisplay                                       5     5      0    4643
                                             18 BANK0      5     5      0
                         _Map255a500
                          _NumAAscii
                            _divisor
 ---------------------------------------------------------------------------------
 (2) _divisor                                              8     3      5    3078
                                             10 BANK0      8     3      5
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _NumAAscii                                            3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map255a500                                           4     3      1    1543
                                             10 BANK0      4     3      1
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _MensajeLCD                                           0     0      0     686
                  _LCD_Imprimir_Char
                 _LCD_Imprimir_Texto
                     _LCD_Set_Cursor
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     335
                                              5 COMMON     3     2      1
                                              0 BANK0      1     1      0
                    _LCD_Instruccion
 ---------------------------------------------------------------------------------
 (2) _LCD_Imprimir_Texto                                   4     4      0     320
                                              0 BANK0      4     4      0
                  _LCD_Imprimir_Char
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     123
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) _LCD_Imprimir_Char                                    1     1      0      31
                                              4 COMMON     1     1      0
                        _LCD_Clock_I
 ---------------------------------------------------------------------------------
 (1) _LCD_Inicar                                           2     2      0      31
                                              5 COMMON     2     2      0
                    _LCD_Instruccion
 ---------------------------------------------------------------------------------
 (3) _LCD_Instruccion                                      1     1      0      31
                                              4 COMMON     1     1      0
                        _LCD_Clock_I
 ---------------------------------------------------------------------------------
 (4) _LCD_Clock_I                                          1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CambioCanalADC                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CambioCanalADC
   _LCD_Inicar
     _LCD_Instruccion
       _LCD_Clock_I
   _MensajeLCD
     _LCD_Imprimir_Char
       _LCD_Clock_I
     _LCD_Imprimir_Texto
       _LCD_Imprimir_Char
       _strlen
     _LCD_Set_Cursor
       _LCD_Instruccion
   _ValoresDisplay
     _Map255a500
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _NumAAscii
     _divisor
       ___awdiv
       ___awmod
   _setup
     _EUSART_C

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4D      12        0.0%
ABS                  0      0      4D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 03 10:01:42 2022

                          pc 0002                  ?_LCD_Inicar 0070                 ?_LCD_Clock_I 0070  
                         _S0 002B                           _S1 002A                           _S2 0029  
               ___awdiv@sign 0040                           fsr 0004          ___wmul@multiplicand 0075  
                        l201 054B                          l141 0426                          l310 04AB  
                        l150 00F1                          l222 037D                          l144 0174  
                        l209 0453                          l138 04CC                          l155 03BC  
                        l147 02EA                          l308 0491                          l192 0533  
                        l169 0292                          l186 0335                          l189 053F  
                        l461 01DD                          l198 0480                          l474 0238  
                        l762 0502                          _S0D 002E                          _S1D 002C  
                        _S2D 0020                   _Map255a500 03FA                          u330 04FC  
                        u331 04FB                          u260 04B2                          u261 04B1  
                        u270 04BB                          u271 04BA                          u710 01AA  
                        u630 0489                          u711 01A9                          u631 0488  
                        u705 019C                          u730 01BB                          u810 020D  
                        u731 01BA                          u811 020C                          u660 04A5  
                        u820 0217                          u725 01AB                          u661 04A4  
                        u645 0492                          u821 0216                          u805 01FF  
                        u750 01CF                          u670 017C                          u751 01CE  
                        u735 01B7                          u671 017B                          u655 0499  
                        u760 01D4                          u680 0187                          u840 022A  
                        u761 01D3                          u745 01C3                          u681 0186  
                        u841 0229                          u825 0213                          u690 0198  
                        u850 022F                          u770 01E5                          u907 030E  
                        u691 0197                          u851 022E                          u835 021E  
                        u771 01E4                          u860 0480                          u780 01F0  
                        u917 031B                          u861 047F                          u781 01EF  
                        u790 01FB                          u927 032A                          u791 01FA  
                        u937 0545                          u865 047C                          u947 04C6  
                        u877 028F                          u887 02F4                          u897 0301  
                        _isr 03BD                          fsr0 0004                          indf 0000  
               ___awmod@sign 003A               _LCD_Set_Cursor 0427                         l1190 04C0  
                       l1510 0239                         l1192 04C4                         l1184 04AC  
                       l1504 0337                         l1520 0245                         l1512 023C  
                       l1194 04C9                         l1186 04B2                         l1290 04EB  
                       l1442 0382                         l1434 037F                         l1506 0350  
                       l1530 0251                         l1522 0248                         l1514 023E  
                       l1188 04BB                         l1700 0540                         l1292 04F0  
                       l1460 0388                         l1436 0380                         l1508 0356  
                       l1540 026E                         l1532 0252                         l1524 0249  
                       l1516 0243                         l1702 0543                         l1710 052C  
                       l1294 04F4                         l1454 0386                         l1550 027B  
                       l1542 026F                         l1534 026B                         l1526 024A  
                       l1518 0244                         l1704 0548                         l1720 053A  
                       l1712 052E                         l1296 04FC                         l1472 038C  
                       l1448 0384                         l1800 0205                         l1560 0282  
                       l1552 027C                         l1544 0272                         l1536 026C  
                       l1528 024B                         l1730 0498                         l1490 0392  
                       l1466 038A                         l1810 0224                         l1802 0209  
                       l1562 0288                         l1554 027F                         l1546 0275  
                       l1538 026D                         l1716 0535                         l1708 0529  
                       l1900 012C                         l1740 0178                         l1732 049F  
                       l1724 0481                         l1820 03FD                         l1484 0390  
                       l1804 020D                         l1812 022A                         l1564 028C  
                       l1556 0280                         l1548 0278                         l1718 0538  
                       l1830 043B                         l1910 0150                         l1902 0134  
                       l1750 018C                         l1742 017C                         l1734 04A5  
                       l1726 0485                         l1478 038E                         l1814 022F  
                       l1806 0217                         l1566 028D                         l1558 0281  
                       l1824 042A                         l1912 0156                         l1904 013A  
                       l1760 01A2                         l1752 0190                         l1744 0181  
                       l1728 0489                         l1816 0234                         l1808 021D  
                       l1920 002C                         l1842 0457                         l1826 042B  
                       l1834 0443                         l1914 015C                         l1906 0142  
                       l1770 01C2                         l1762 01A6                         l1754 0192  
                       l1746 0183                         l1738 0175                         l1498 0394  
                       l1850 0293                         l1860 02EB                         l1844 0459  
                       l1828 0433                         l1916 0164                         l1908 014A  
                       l1772 01C9                         l1764 01AA                         l1756 0198  
                       l1748 0187                         l1852 02AB                         l1924 04CD  
                       l1870 0306                         l1862 02EF                         l1846 0465  
                       l1918 016C                         l1766 01BB                         l1758 019B  
                       l1774 01CF                         l1790 01EC                         l1782 01DE  
                       l1854 02BE                         l1926 04D7                         l1880 0326  
                       l1872 030C                         l1864 02F0                         l1848 046B  
                       l1776 01D4                         l1768 01C1                         l1792 01F0  
                       l1784 01E1                         l1856 02D4                         l1928 04DC  
                       l1882 032F                         l1874 0311                         l1866 02F9  
                       l1890 010C                         l1778 01D9                         l1794 01F5  
                       l1786 01E5                         l1876 0317                         l1868 02FF  
                       l1892 0112                         l1980 039C                         l1796 01FB  
                       l1788 01EA                         l1878 0320                         l1982 044B  
                       l1894 0118                         l1886 00F2                         l1798 01FE  
                       l1896 0120                         l1888 0106                         l1898 0126  
                       ?_isr 0070                         _S0DC 0038                         _S0DD 0037  
                       _S1DC 0035                         _S1DD 0034                         _S2DC 0032  
                       _S2DD 0031                         _S0DU 0036                         _S1DU 0033  
                       _S2DU 0030                         _main 04CD                         btemp 007E  
                       start 000C              _LCD_Instruccion 0534                        ??_isr 0070  
           __end_of_EUSART_C 037E                        ?_main 0070              __end_of___awdiv 01DE  
            __end_of___awmod 0239                        _ANSEL 0188              ___awdiv@divisor 003B  
                      i1l115 03D7                        i1l124 03F3                        i1l119 03F3  
            ___awdiv@counter 003F                        _RCREG 001A                        _SPBRG 0099  
                      _PORTA 0005                        _PORTB 0006                        _PORTD 0008  
                      _PORTE 0009                        u60_20 03DB                        u60_21 03DA  
                      u61_20 03E5                        u61_21 03E4                        u62_20 03F0  
                      u62_21 03EF                        _TRISA 0085                        _TRISB 0086  
                      _TRISD 0088                        _TRISE 0089                        u58_20 03C3  
                      u58_21 03C2                        u59_20 03CC                        u59_21 03CB  
     __end_of_LCD_Set_Cursor 0454              __end_of_divisor 02EB      __size_of_ValoresDisplay 00C6  
                EUSART_C@rx9 003E                  EUSART_C@tx9 0041                        _setup 0239  
        __size_of_LCD_Inicar 004B                        pclath 000A                        status 0003  
                      wtemp0 007E              __initialization 000F            _LCD_Imprimir_Char 0528  
               __end_of_main 04EA                   _MensajeLCD 00F2           ?_LCD_Imprimir_Char 0070  
               divisor@valor 0043                       ??_main 0078                  ?_Map255a500 0043  
        ??_LCD_Imprimir_Char 0074              ?_LCD_Set_Cursor 0075                       _ADRESH 001E  
           ___awdiv@dividend 003D                       ?_setup 0070              divisor@unidades 0045  
                     _ANSELH 0189                       i1l1640 03D1                       i1l1650 03EA  
                     i1l1642 03D5                       i1l1634 03BD                       i1l1652 03F0  
                     i1l1644 03DB                       i1l1636 03C3                       i1l1646 03DF  
                     i1l1638 03CC                       i1l1648 03E5                       _SPBRGH 009A  
    __end_of_LCD_Instruccion 0540           __size_of_NumAAscii 003F    __end_of_LCD_Imprimir_Char 0534  
                     ___wmul 0481                    ??___awdiv 0077                    ??___awmod 0077  
               EUSART_C@brgh 0039                 EUSART_C@cren 003F                 EUSART_C@sinc 0073  
               EUSART_C@spen 003D                 EUSART_C@txen 0040             ___awdiv@quotient 0041  
            ___awmod@divisor 0073         __size_of_LCD_Clock_I 000C                       _portEs 007A  
            ___awmod@counter 0039                       _strlen 04EA                    ??_divisor 0048  
                     saved_w 007E      __size_of_CambioCanalADC 0021              LCD_Set_Cursor@a 0039  
            LCD_Set_Cursor@b 0075      __end_of__initialization 0028                    ?_EUSART_C 0039  
        __size_of_Map255a500 002D               __pcstackCOMMON 0070                 __pidataBANK0 0516  
               ??_LCD_Inicar 0075             divisor@cociente0 0049                  ?_MensajeLCD 0070  
              __end_of_setup 0293           _LCD_Imprimir_Texto 0454                divisor@decena 0046  
        ?_LCD_Imprimir_Texto 0070            __end_of_NumAAscii 03BD     LCD_Imprimir_Char@Comando 0074  
             _ValoresDisplay 002C                      ??_setup 0074                   __pbssBANK0 0020  
         __end_of_LCD_Inicar 0336                   ??_EUSART_C 0073             ?_LCD_Instruccion 0070  
       ??_LCD_Imprimir_Texto 0039   __size_of_LCD_Imprimir_Char 000C                   __pmaintext 04CD  
                    ?___wmul 0073                   __pintentry 0004                      ?_strlen 0073  
     __end_of_ValoresDisplay 00F2          __size_of_MensajeLCD 0083                      ___awdiv 0175  
                    ___awmod 01DE              __size_of___wmul 002B          LCD_Imprimir_Texto@a 003B  
        LCD_Imprimir_Texto@i 003C                EUSART_C@brg16 003A             ??_LCD_Set_Cursor 0076  
                    __ptext1 0239                      __ptext2 0336                      __ptext3 002C  
                    __ptext4 0293                      __ptext5 01DE                      __ptext6 037E  
                    __ptext7 03FA                      __ptext8 0481                      __ptext9 0175  
               ??_Map255a500 0044                      _divisor 0293              __size_of_strlen 0019  
              EUSART_C@spbrg 003B                 __size_of_isr 003D              ?_ValoresDisplay 0070  
           ___awmod@dividend 0075               _CambioCanalADC 04AC                      clrloop0 054D  
       end_of_initialization 0028           __end_of_Map255a500 0427               NumAAscii@valor 0075  
                  _RCSTAbits 0018                      strlen@s 0076                    _PORTBbits 0006  
                  _PORTEbits 0009       __end_of_CambioCanalADC 04CD                    _TXSTAbits 0098  
          __size_of_EUSART_C 0048                ??_LCD_Clock_I 0073                 ??_MensajeLCD 0078  
             __end_of___wmul 04AC                  _BAUDCTLbits 0187              ?_CambioCanalADC 0070  
             __end_of_strlen 0503          start_initialization 000F               divisor@centena 0047  
                __end_of_isr 03FA                    _NumAAscii 037E           __end_of_MensajeLCD 0175  
                   ??___wmul 0077                   init_fetch0 0503                  __pdataBANK0 0050  
                   ??_strlen 0075          __end_of_LCD_Clock_I 054C                  __pbssCOMMON 0078  
                  ___latbits 0002                __pcstackBANK0 0039                   ?_NumAAscii 0070  
                Map255a500@a 0046                  Map255a500@b 0043       LCD_Instruccion@Comando 0074  
__size_of_LCD_Imprimir_Texto 002D                    _centenas0 0079                    _centenas1 0027  
                  _centenas2 0024                     ?___awdiv 003B                     ?___awmod 0073  
   __size_of_LCD_Instruccion 000C             ??_ValoresDisplay 004B                     ?_divisor 0043  
             __size_of_setup 005A            interrupt_function 0004               ___wmul@product 0039  
                   _EUSART_C 0336                    clear_ram0 054C                     _PIE1bits 008C  
                   _PIR1bits 000C                  _LCD_Clock_I 0540                    _unidades0 0028  
                  _unidades1 0025                    _unidades2 0022                   _ADCON0bits 001F  
                 _ADCON1bits 009F            ___wmul@multiplier 0073                  ??_NumAAscii 0073  
                   _Mensaje1 0050             ??_CambioCanalADC 0073             __size_of___awdiv 0069  
           __size_of___awmod 005B                     _decenas0 0078                     _decenas1 0026  
                   _decenas2 0023             __size_of_divisor 0058            ??_LCD_Instruccion 0074  
                   __ptext10 00F2                     __ptext11 0427                     __ptext12 0454  
                   __ptext13 04EA                     __ptext14 0528                     __ptext15 02EB  
                   __ptext16 0534                     __ptext17 0540                     __ptext18 04AC  
                   __ptext19 03BD      __size_of_LCD_Set_Cursor 002D               EUSART_C@spbrgh 003C  
              __size_of_main 001D                   _LCD_Inicar 02EB                   _INTCONbits 000B  
                   init_ram0 0507                     intlevel1 0000                   _OSCCONbits 008F  
                   strlen@cp 0077   __end_of_LCD_Imprimir_Texto 0481  
